/**
 */
package behaviorMetamodel.provider;

import behaviorMetamodel.util.MetamodelAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class MetamodelItemProviderAdapterFactory extends MetamodelAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MetamodelItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Entity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityItemProvider entityItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Entity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityAdapter() {
		if (entityItemProvider == null) {
			entityItemProvider = new EntityItemProvider(this);
		}

		return entityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Behavior} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BehaviorItemProvider behaviorItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Behavior}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBehaviorAdapter() {
		if (behaviorItemProvider == null) {
			behaviorItemProvider = new BehaviorItemProvider(this);
		}

		return behaviorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.EquationBehavior} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EquationBehaviorItemProvider equationBehaviorItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.EquationBehavior}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEquationBehaviorAdapter() {
		if (equationBehaviorItemProvider == null) {
			equationBehaviorItemProvider = new EquationBehaviorItemProvider(this);
		}

		return equationBehaviorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.ActivityDiagramBehavior} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActivityDiagramBehaviorItemProvider activityDiagramBehaviorItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.ActivityDiagramBehavior}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActivityDiagramBehaviorAdapter() {
		if (activityDiagramBehaviorItemProvider == null) {
			activityDiagramBehaviorItemProvider = new ActivityDiagramBehaviorItemProvider(this);
		}

		return activityDiagramBehaviorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.VariableClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableClassItemProvider variableClassItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.VariableClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableClassAdapter() {
		if (variableClassItemProvider == null) {
			variableClassItemProvider = new VariableClassItemProvider(this);
		}

		return variableClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.InitSpace} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InitSpaceItemProvider initSpaceItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.InitSpace}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInitSpaceAdapter() {
		if (initSpaceItemProvider == null) {
			initSpaceItemProvider = new InitSpaceItemProvider(this);
		}

		return initSpaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Type} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeItemProvider typeItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Type}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeAdapter() {
		if (typeItemProvider == null) {
			typeItemProvider = new TypeItemProvider(this);
		}

		return typeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Expression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionItemProvider expressionItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Expression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionAdapter() {
		if (expressionItemProvider == null) {
			expressionItemProvider = new ExpressionItemProvider(this);
		}

		return expressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.ParameterClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterClassItemProvider parameterClassItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.ParameterClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterClassAdapter() {
		if (parameterClassItemProvider == null) {
			parameterClassItemProvider = new ParameterClassItemProvider(this);
		}

		return parameterClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.AttributeClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeClassItemProvider attributeClassItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.AttributeClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeClassAdapter() {
		if (attributeClassItemProvider == null) {
			attributeClassItemProvider = new AttributeClassItemProvider(this);
		}

		return attributeClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.LocalVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocalVariableItemProvider localVariableItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.LocalVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocalVariableAdapter() {
		if (localVariableItemProvider == null) {
			localVariableItemProvider = new LocalVariableItemProvider(this);
		}

		return localVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.ConstantExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstantExpressionItemProvider constantExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.ConstantExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstantExpressionAdapter() {
		if (constantExpressionItemProvider == null) {
			constantExpressionItemProvider = new ConstantExpressionItemProvider(this);
		}

		return constantExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.FunctionCallExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionCallExpressionItemProvider functionCallExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.FunctionCallExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionCallExpressionAdapter() {
		if (functionCallExpressionItemProvider == null) {
			functionCallExpressionItemProvider = new FunctionCallExpressionItemProvider(this);
		}

		return functionCallExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Function} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionItemProvider functionItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Function}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionAdapter() {
		if (functionItemProvider == null) {
			functionItemProvider = new FunctionItemProvider(this);
		}

		return functionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.NamedFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamedFunctionItemProvider namedFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.NamedFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamedFunctionAdapter() {
		if (namedFunctionItemProvider == null) {
			namedFunctionItemProvider = new NamedFunctionItemProvider(this);
		}

		return namedFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.AnonymousFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnonymousFunctionItemProvider anonymousFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.AnonymousFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnonymousFunctionAdapter() {
		if (anonymousFunctionItemProvider == null) {
			anonymousFunctionItemProvider = new AnonymousFunctionItemProvider(this);
		}

		return anonymousFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Equation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EquationItemProvider equationItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Equation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEquationAdapter() {
		if (equationItemProvider == null) {
			equationItemProvider = new EquationItemProvider(this);
		}

		return equationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Element} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementItemProvider elementItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Element}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementAdapter() {
		if (elementItemProvider == null) {
			elementItemProvider = new ElementItemProvider(this);
		}

		return elementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Edge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EdgeItemProvider edgeItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Edge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEdgeAdapter() {
		if (edgeItemProvider == null) {
			edgeItemProvider = new EdgeItemProvider(this);
		}

		return edgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Node} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeItemProvider nodeItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Node}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeAdapter() {
		if (nodeItemProvider == null) {
			nodeItemProvider = new NodeItemProvider(this);
		}

		return nodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.UnconditionedEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnconditionedEdgeItemProvider unconditionedEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.UnconditionedEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnconditionedEdgeAdapter() {
		if (unconditionedEdgeItemProvider == null) {
			unconditionedEdgeItemProvider = new UnconditionedEdgeItemProvider(this);
		}

		return unconditionedEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.IfTrueEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IfTrueEdgeItemProvider ifTrueEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.IfTrueEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIfTrueEdgeAdapter() {
		if (ifTrueEdgeItemProvider == null) {
			ifTrueEdgeItemProvider = new IfTrueEdgeItemProvider(this);
		}

		return ifTrueEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.IfFalseEdge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IfFalseEdgeItemProvider ifFalseEdgeItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.IfFalseEdge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIfFalseEdgeAdapter() {
		if (ifFalseEdgeItemProvider == null) {
			ifFalseEdgeItemProvider = new IfFalseEdgeItemProvider(this);
		}

		return ifFalseEdgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.ControlNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ControlNodeItemProvider controlNodeItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.ControlNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createControlNodeAdapter() {
		if (controlNodeItemProvider == null) {
			controlNodeItemProvider = new ControlNodeItemProvider(this);
		}

		return controlNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.ExecutableNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExecutableNodeItemProvider executableNodeItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.ExecutableNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExecutableNodeAdapter() {
		if (executableNodeItemProvider == null) {
			executableNodeItemProvider = new ExecutableNodeItemProvider(this);
		}

		return executableNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Start} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StartItemProvider startItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Start}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStartAdapter() {
		if (startItemProvider == null) {
			startItemProvider = new StartItemProvider(this);
		}

		return startItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.End} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndItemProvider endItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.End}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndAdapter() {
		if (endItemProvider == null) {
			endItemProvider = new EndItemProvider(this);
		}

		return endItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Decision} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecisionItemProvider decisionItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Decision}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecisionAdapter() {
		if (decisionItemProvider == null) {
			decisionItemProvider = new DecisionItemProvider(this);
		}

		return decisionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Fork} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForkItemProvider forkItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Fork}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForkAdapter() {
		if (forkItemProvider == null) {
			forkItemProvider = new ForkItemProvider(this);
		}

		return forkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Merge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergeItemProvider mergeItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Merge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergeAdapter() {
		if (mergeItemProvider == null) {
			mergeItemProvider = new MergeItemProvider(this);
		}

		return mergeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Join} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JoinItemProvider joinItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Join}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJoinAdapter() {
		if (joinItemProvider == null) {
			joinItemProvider = new JoinItemProvider(this);
		}

		return joinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Move} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MoveItemProvider moveItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Move}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMoveAdapter() {
		if (moveItemProvider == null) {
			moveItemProvider = new MoveItemProvider(this);
		}

		return moveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Die} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DieItemProvider dieItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Die}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDieAdapter() {
		if (dieItemProvider == null) {
			dieItemProvider = new DieItemProvider(this);
		}

		return dieItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Reproduce} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReproduceItemProvider reproduceItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Reproduce}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReproduceAdapter() {
		if (reproduceItemProvider == null) {
			reproduceItemProvider = new ReproduceItemProvider(this);
		}

		return reproduceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Add} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddItemProvider addItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Add}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddAdapter() {
		if (addItemProvider == null) {
			addItemProvider = new AddItemProvider(this);
		}

		return addItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Remove} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveItemProvider removeItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Remove}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveAdapter() {
		if (removeItemProvider == null) {
			removeItemProvider = new RemoveItemProvider(this);
		}

		return removeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.ActivityBehavior} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActivityBehaviorItemProvider activityBehaviorItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.ActivityBehavior}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActivityBehaviorAdapter() {
		if (activityBehaviorItemProvider == null) {
			activityBehaviorItemProvider = new ActivityBehaviorItemProvider(this);
		}

		return activityBehaviorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.PrimitiveActivities} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimitiveActivitiesItemProvider primitiveActivitiesItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.PrimitiveActivities}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveActivitiesAdapter() {
		if (primitiveActivitiesItemProvider == null) {
			primitiveActivitiesItemProvider = new PrimitiveActivitiesItemProvider(this);
		}

		return primitiveActivitiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Model} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelItemProvider modelItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Model}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelAdapter() {
		if (modelItemProvider == null) {
			modelItemProvider = new ModelItemProvider(this);
		}

		return modelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.DeclaredLocalVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeclaredLocalVariableItemProvider declaredLocalVariableItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.DeclaredLocalVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeclaredLocalVariableAdapter() {
		if (declaredLocalVariableItemProvider == null) {
			declaredLocalVariableItemProvider = new DeclaredLocalVariableItemProvider(this);
		}

		return declaredLocalVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.DeclaredParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeclaredParameterItemProvider declaredParameterItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.DeclaredParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeclaredParameterAdapter() {
		if (declaredParameterItemProvider == null) {
			declaredParameterItemProvider = new DeclaredParameterItemProvider(this);
		}

		return declaredParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.DeclaredAttributes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeclaredAttributesItemProvider declaredAttributesItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.DeclaredAttributes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeclaredAttributesAdapter() {
		if (declaredAttributesItemProvider == null) {
			declaredAttributesItemProvider = new DeclaredAttributesItemProvider(this);
		}

		return declaredAttributesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.DeclaredEntities} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeclaredEntitiesItemProvider declaredEntitiesItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.DeclaredEntities}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeclaredEntitiesAdapter() {
		if (declaredEntitiesItemProvider == null) {
			declaredEntitiesItemProvider = new DeclaredEntitiesItemProvider(this);
		}

		return declaredEntitiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.DeclaredVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeclaredVariableItemProvider declaredVariableItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.DeclaredVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeclaredVariableAdapter() {
		if (declaredVariableItemProvider == null) {
			declaredVariableItemProvider = new DeclaredVariableItemProvider(this);
		}

		return declaredVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.DeclaredBehavior} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeclaredBehaviorItemProvider declaredBehaviorItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.DeclaredBehavior}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeclaredBehaviorAdapter() {
		if (declaredBehaviorItemProvider == null) {
			declaredBehaviorItemProvider = new DeclaredBehaviorItemProvider(this);
		}

		return declaredBehaviorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.InitEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InitEntityItemProvider initEntityItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.InitEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInitEntityAdapter() {
		if (initEntityItemProvider == null) {
			initEntityItemProvider = new InitEntityItemProvider(this);
		}

		return initEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Assignment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssignmentItemProvider assignmentItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Assignment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssignmentAdapter() {
		if (assignmentItemProvider == null) {
			assignmentItemProvider = new AssignmentItemProvider(this);
		}

		return assignmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.Init} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InitItemProvider initItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.Init}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInitAdapter() {
		if (initItemProvider == null) {
			initItemProvider = new InitItemProvider(this);
		}

		return initItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link behaviorMetamodel.SetVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetVariableItemProvider setVariableItemProvider;

	/**
	 * This creates an adapter for a {@link behaviorMetamodel.SetVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetVariableAdapter() {
		if (setVariableItemProvider == null) {
			setVariableItemProvider = new SetVariableItemProvider(this);
		}

		return setVariableItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (entityItemProvider != null) entityItemProvider.dispose();
		if (behaviorItemProvider != null) behaviorItemProvider.dispose();
		if (equationBehaviorItemProvider != null) equationBehaviorItemProvider.dispose();
		if (activityDiagramBehaviorItemProvider != null) activityDiagramBehaviorItemProvider.dispose();
		if (variableClassItemProvider != null) variableClassItemProvider.dispose();
		if (initSpaceItemProvider != null) initSpaceItemProvider.dispose();
		if (typeItemProvider != null) typeItemProvider.dispose();
		if (expressionItemProvider != null) expressionItemProvider.dispose();
		if (parameterClassItemProvider != null) parameterClassItemProvider.dispose();
		if (attributeClassItemProvider != null) attributeClassItemProvider.dispose();
		if (localVariableItemProvider != null) localVariableItemProvider.dispose();
		if (constantExpressionItemProvider != null) constantExpressionItemProvider.dispose();
		if (functionCallExpressionItemProvider != null) functionCallExpressionItemProvider.dispose();
		if (functionItemProvider != null) functionItemProvider.dispose();
		if (namedFunctionItemProvider != null) namedFunctionItemProvider.dispose();
		if (anonymousFunctionItemProvider != null) anonymousFunctionItemProvider.dispose();
		if (equationItemProvider != null) equationItemProvider.dispose();
		if (elementItemProvider != null) elementItemProvider.dispose();
		if (edgeItemProvider != null) edgeItemProvider.dispose();
		if (nodeItemProvider != null) nodeItemProvider.dispose();
		if (unconditionedEdgeItemProvider != null) unconditionedEdgeItemProvider.dispose();
		if (ifTrueEdgeItemProvider != null) ifTrueEdgeItemProvider.dispose();
		if (ifFalseEdgeItemProvider != null) ifFalseEdgeItemProvider.dispose();
		if (controlNodeItemProvider != null) controlNodeItemProvider.dispose();
		if (executableNodeItemProvider != null) executableNodeItemProvider.dispose();
		if (startItemProvider != null) startItemProvider.dispose();
		if (endItemProvider != null) endItemProvider.dispose();
		if (decisionItemProvider != null) decisionItemProvider.dispose();
		if (forkItemProvider != null) forkItemProvider.dispose();
		if (mergeItemProvider != null) mergeItemProvider.dispose();
		if (joinItemProvider != null) joinItemProvider.dispose();
		if (moveItemProvider != null) moveItemProvider.dispose();
		if (dieItemProvider != null) dieItemProvider.dispose();
		if (reproduceItemProvider != null) reproduceItemProvider.dispose();
		if (addItemProvider != null) addItemProvider.dispose();
		if (removeItemProvider != null) removeItemProvider.dispose();
		if (activityBehaviorItemProvider != null) activityBehaviorItemProvider.dispose();
		if (primitiveActivitiesItemProvider != null) primitiveActivitiesItemProvider.dispose();
		if (modelItemProvider != null) modelItemProvider.dispose();
		if (declaredLocalVariableItemProvider != null) declaredLocalVariableItemProvider.dispose();
		if (declaredParameterItemProvider != null) declaredParameterItemProvider.dispose();
		if (declaredAttributesItemProvider != null) declaredAttributesItemProvider.dispose();
		if (declaredEntitiesItemProvider != null) declaredEntitiesItemProvider.dispose();
		if (declaredVariableItemProvider != null) declaredVariableItemProvider.dispose();
		if (declaredBehaviorItemProvider != null) declaredBehaviorItemProvider.dispose();
		if (initEntityItemProvider != null) initEntityItemProvider.dispose();
		if (assignmentItemProvider != null) assignmentItemProvider.dispose();
		if (initItemProvider != null) initItemProvider.dispose();
		if (setVariableItemProvider != null) setVariableItemProvider.dispose();
	}

}
