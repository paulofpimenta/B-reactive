/*
 * generated by Xtext 2.10.0
 */
grammar InternalBreactive;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.cirad.dsl.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.cirad.dsl.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.cirad.dsl.xtext.services.BreactiveGrammarAccess;

}

@parser::members {

 	private BreactiveGrammarAccess grammarAccess;

    public InternalBreactiveParser(TokenStream input, BreactiveGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected BreactiveGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 0);
				}
							({true}?=>(otherlv_1='Model'
							{
								newLeafNode(otherlv_1, grammarAccess.getModelAccess().getModelKeyword_0_0());
							}
							(
								(
									lv_name_2_0=RULE_ID
									{
										newLeafNode(lv_name_2_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_0_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getModelRule());
										}
										setWithLastConsumed(
											$current,
											"name",
											lv_name_2_0,
											"org.eclipse.xtext.common.Terminals.ID");
									}
								)
							)
							otherlv_3='{'
							{
								newLeafNode(otherlv_3, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_0_2());
							}
							(
								(
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getEntitiesEntityParserRuleCall_0_3_0_0());
										}
										lv_entities_4_0=ruleEntity
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											add(
												$current,
												"entities",
												lv_entities_4_0,
												"org.cirad.dsl.xtext.Breactive.Entity");
											afterParserOrEnumRuleCall();
										}
									)
								)*
								(
									otherlv_5='Run main as : '
									{
										newLeafNode(otherlv_5, grammarAccess.getModelAccess().getRunMainAsKeyword_0_3_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getModelAccess().getMainBehaviorBehaviorParserRuleCall_0_3_1_1_0());
											}
											lv_mainBehavior_6_0=ruleBehavior
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getModelRule());
												}
												set(
													$current,
													"mainBehavior",
													lv_mainBehavior_6_0,
													"org.cirad.dsl.xtext.Breactive.Behavior");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								(
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getInitInitEntityParserRuleCall_0_3_2_0());
										}
										lv_init_7_0=ruleInitEntity
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											add(
												$current,
												"init",
												lv_init_7_0,
												"org.cirad.dsl.xtext.Breactive.InitEntity");
											afterParserOrEnumRuleCall();
										}
									)
								)*
								(
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getInitInitSpaceParserRuleCall_0_3_3_0());
										}
										lv_init_8_0=ruleInitSpace
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											add(
												$current,
												"init",
												lv_init_8_0,
												"org.cirad.dsl.xtext.Breactive.InitSpace");
											afterParserOrEnumRuleCall();
										}
									)
								)*
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 1);
				}
							({true}?=>(otherlv_9='}'
							{
								newLeafNode(otherlv_9, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_1());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)
				)+
				{getUnorderedGroupHelper().canLeave(grammarAccess.getModelAccess().getUnorderedGroup())}?
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup());
			}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='Attributes'
			{
				newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getAttributesKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeClassParserRuleCall_3_2_0());
					}
					lv_attributes_5_0=ruleAttributeClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_5_0,
							"org.cirad.dsl.xtext.Breactive.AttributeClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getEntityAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeClassParserRuleCall_3_3_1_0());
						}
						lv_attributes_7_0=ruleAttributeClass
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntityRule());
							}
							add(
								$current,
								"attributes",
								lv_attributes_7_0,
								"org.cirad.dsl.xtext.Breactive.AttributeClass");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getBehaviorBehaviorParserRuleCall_4_0_0());
					}
					lv_behavior_9_0=ruleBehavior
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"behavior",
							lv_behavior_9_0,
							"org.cirad.dsl.xtext.Breactive.Behavior");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getBehaviorBehaviorParserRuleCall_4_1_0());
					}
					lv_behavior_10_0=ruleBehavior
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"behavior",
							lv_behavior_10_0,
							"org.cirad.dsl.xtext.Breactive.Behavior");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleInitEntity
entryRuleInitEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitEntityRule()); }
	iv_ruleInitEntity=ruleInitEntity
	{ $current=$iv_ruleInitEntity.current; }
	EOF;

// Rule InitEntity
ruleInitEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInitEntityAccess().getInitFunctionCallEntitySetCreateFCExpressionParserRuleCall_0_0());
				}
				lv_initFunctionCall_0_0=ruleEntitySetCreateFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitEntityRule());
					}
					set(
						$current,
						"initFunctionCall",
						lv_initFunctionCall_0_0,
						"org.cirad.dsl.xtext.Breactive.EntitySetCreateFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='as '
		{
			newLeafNode(otherlv_1, grammarAccess.getInitEntityAccess().getAsKeyword_1());
		}
		(
			(
				lv_initName_2_0=RULE_ID
				{
					newLeafNode(lv_initName_2_0, grammarAccess.getInitEntityAccess().getInitNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitEntityRule());
					}
					setWithLastConsumed(
						$current,
						"initName",
						lv_initName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getInitEntityAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='each'
		{
			newLeafNode(otherlv_4, grammarAccess.getInitEntityAccess().getEachKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitEntityRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getInitEntityAccess().getEntityEntityCrossReference_5_0());
				}
			)
		)
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getInitEntityAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getInitEntityAccess().getUnorderedGroup_7());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInitEntityAccess().getUnorderedGroup_7(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getInitEntityAccess().getUnorderedGroup_7(), 0);
					}
								({true}?=>(otherlv_8='position ='
								{
									newLeafNode(otherlv_8, grammarAccess.getInitEntityAccess().getPositionKeyword_7_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getInitEntityAccess().getInitialLocationLocationNamedFCExpressionParserRuleCall_7_0_1_0());
										}
										lv_initialLocation_9_0=ruleLocationNamedFCExpression
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getInitEntityRule());
											}
											set(
												$current,
												"initialLocation",
												lv_initialLocation_9_0,
												"org.cirad.dsl.xtext.Breactive.LocationNamedFCExpression");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInitEntityAccess().getUnorderedGroup_7());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInitEntityAccess().getUnorderedGroup_7(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getInitEntityAccess().getUnorderedGroup_7(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getInitEntityAccess().getAssingnmentsAssignmentParserRuleCall_7_1_0());
									}
									lv_assingnments_10_0=ruleAssignment
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getInitEntityRule());
										}
										add(
											$current,
											"assingnments",
											lv_assingnments_10_0,
											"org.cirad.dsl.xtext.Breactive.Assignment");
										afterParserOrEnumRuleCall();
									}
								)
								))+
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInitEntityAccess().getUnorderedGroup_7());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getInitEntityAccess().getUnorderedGroup_7())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getInitEntityAccess().getUnorderedGroup_7());
				}
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getInitEntityAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getInitEntityAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getVariableDeclaredVariableParserRuleCall_0_0());
				}
				lv_variable_0_0=ruleDeclaredVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"variable",
						lv_variable_0_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionFunctionCallExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleFunctionCallExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.cirad.dsl.xtext.Breactive.FunctionCallExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInitSpace
entryRuleInitSpace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitSpaceRule()); }
	iv_ruleInitSpace=ruleInitSpace
	{ $current=$iv_ruleInitSpace.current; }
	EOF;

// Rule InitSpace
ruleInitSpace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInitSpaceAccess().getInitSpaceAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInitSpaceAccess().getInitFunctionCallSpaceInitFCExpressionParserRuleCall_1_0());
				}
				lv_initFunctionCall_1_0=ruleSpaceInitFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitSpaceRule());
					}
					set(
						$current,
						"initFunctionCall",
						lv_initFunctionCall_1_0,
						"org.cirad.dsl.xtext.Breactive.SpaceInitFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInitSpaceAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='each'
		{
			newLeafNode(otherlv_3, grammarAccess.getInitSpaceAccess().getEachKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitSpaceRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getInitSpaceAccess().getEntityEntityCrossReference_4_0());
				}
			)
		)
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getInitSpaceAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitSpaceAccess().getAssingnmentsAssignmentParserRuleCall_6_0());
				}
				lv_assingnments_6_0=ruleAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitSpaceRule());
					}
					add(
						$current,
						"assingnments",
						lv_assingnments_6_0,
						"org.cirad.dsl.xtext.Breactive.Assignment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getInitSpaceAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getInitSpaceAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleParameterClass
entryRuleParameterClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterClassRule()); }
	iv_ruleParameterClass=ruleParameterClass
	{ $current=$iv_ruleParameterClass.current; }
	EOF;

// Rule ParameterClass
ruleParameterClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterClassAccess().getParameterClassAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getParameterClassAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getParameterClassAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterClassAccess().getTypeTypeEnumEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterClassRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.cirad.dsl.xtext.Breactive.TypeEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAttributeClass
entryRuleAttributeClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeClassRule()); }
	iv_ruleAttributeClass=ruleAttributeClass
	{ $current=$iv_ruleAttributeClass.current; }
	EOF;

// Rule AttributeClass
ruleAttributeClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributeClassAccess().getAttributeClassAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAttributeClassAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeClassAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeClassAccess().getTypeTypeEnumEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeEnum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeClassRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.cirad.dsl.xtext.Breactive.TypeEnum");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLocalVariableClass
entryRuleLocalVariableClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalVariableClassRule()); }
	iv_ruleLocalVariableClass=ruleLocalVariableClass
	{ $current=$iv_ruleLocalVariableClass.current; }
	EOF;

// Rule LocalVariableClass
ruleLocalVariableClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLocalVariableClassAccess().getLocalVariableAction_0(),
					$current);
			}
		)
		otherlv_1='let'
		{
			newLeafNode(otherlv_1, grammarAccess.getLocalVariableClassAccess().getLetKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getLocalVariableClassAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocalVariableClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='<-'
		{
			newLeafNode(otherlv_3, grammarAccess.getLocalVariableClassAccess().getLessThanSignHyphenMinusKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalVariableClassAccess().getExpressionFunctionCallExpressionParserRuleCall_4_0());
				}
				lv_expression_4_0=ruleFunctionCallExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalVariableClassRule());
					}
					set(
						$current,
						"expression",
						lv_expression_4_0,
						"org.cirad.dsl.xtext.Breactive.FunctionCallExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBehavior
entryRuleBehavior returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBehaviorRule()); }
	iv_ruleBehavior=ruleBehavior
	{ $current=$iv_ruleBehavior.current; }
	EOF;

// Rule Behavior
ruleBehavior returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBehaviorAccess().getEquationBehaviourParserRuleCall_0());
		}
		this_EquationBehaviour_0=ruleEquationBehaviour
		{
			$current = $this_EquationBehaviour_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBehaviorAccess().getActivityDiagramBehaviorParserRuleCall_1());
		}
		this_ActivityDiagramBehavior_1=ruleActivityDiagramBehavior
		{
			$current = $this_ActivityDiagramBehavior_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBehaviorAccess().getActivityBehaviorParserRuleCall_2());
		}
		this_ActivityBehavior_2=ruleActivityBehavior
		{
			$current = $this_ActivityBehavior_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNodeAccess().getControlNodeParserRuleCall_0());
		}
		this_ControlNode_0=ruleControlNode
		{
			$current = $this_ControlNode_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNodeAccess().getExcecutableNodeParserRuleCall_1());
		}
		this_ExcecutableNode_1=ruleExcecutableNode
		{
			$current = $this_ExcecutableNode_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNodeAccess().getDeclaredBehaviorParserRuleCall_2());
		}
		this_DeclaredBehavior_2=ruleDeclaredBehavior
		{
			$current = $this_DeclaredBehavior_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleControlNode
entryRuleControlNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlNodeRule()); }
	iv_ruleControlNode=ruleControlNode
	{ $current=$iv_ruleControlNode.current; }
	EOF;

// Rule ControlNode
ruleControlNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getControlNodeAccess().getDecisionParserRuleCall_0());
		}
		this_Decision_0=ruleDecision
		{
			$current = $this_Decision_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getControlNodeAccess().getJoinParserRuleCall_1());
		}
		this_Join_1=ruleJoin
		{
			$current = $this_Join_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getControlNodeAccess().getStartParserRuleCall_2());
		}
		this_Start_2=ruleStart
		{
			$current = $this_Start_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getControlNodeAccess().getEndParserRuleCall_3());
		}
		this_End_3=ruleEnd
		{
			$current = $this_End_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getControlNodeAccess().getForkParserRuleCall_4());
		}
		this_Fork_4=ruleFork
		{
			$current = $this_Fork_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getControlNodeAccess().getMergeParserRuleCall_5());
		}
		this_Merge_5=ruleMerge
		{
			$current = $this_Merge_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExcecutableNode
entryRuleExcecutableNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExcecutableNodeRule()); }
	iv_ruleExcecutableNode=ruleExcecutableNode
	{ $current=$iv_ruleExcecutableNode.current; }
	EOF;

// Rule ExcecutableNode
ruleExcecutableNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExcecutableNodeAccess().getPrimitiveActivitiesParserRuleCall());
	}
	this_PrimitiveActivities_0=rulePrimitiveActivities
	{
		$current = $this_PrimitiveActivities_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulePrimitiveActivities
entryRulePrimitiveActivities returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveActivitiesRule()); }
	iv_rulePrimitiveActivities=rulePrimitiveActivities
	{ $current=$iv_rulePrimitiveActivities.current; }
	EOF;

// Rule PrimitiveActivities
rulePrimitiveActivities returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimitiveActivitiesAccess().getAddParserRuleCall_0());
		}
		this_Add_0=ruleAdd
		{
			$current = $this_Add_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveActivitiesAccess().getRemoveParserRuleCall_1());
		}
		this_Remove_1=ruleRemove
		{
			$current = $this_Remove_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveActivitiesAccess().getMoveParserRuleCall_2());
		}
		this_Move_2=ruleMove
		{
			$current = $this_Move_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveActivitiesAccess().getReproduceParserRuleCall_3());
		}
		this_Reproduce_3=ruleReproduce
		{
			$current = $this_Reproduce_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveActivitiesAccess().getDieParserRuleCall_4());
		}
		this_Die_4=ruleDie
		{
			$current = $this_Die_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveActivitiesAccess().getSetParserRuleCall_5());
		}
		this_Set_5=ruleSet
		{
			$current = $this_Set_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleEquationBehaviour
entryRuleEquationBehaviour returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquationBehaviourRule()); }
	iv_ruleEquationBehaviour=ruleEquationBehaviour
	{ $current=$iv_ruleEquationBehaviour.current; }
	EOF;

// Rule EquationBehaviour
ruleEquationBehaviour returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEquationBehaviourAccess().getEquationBehaviorAction_0(),
					$current);
			}
		)
		otherlv_1='EquationBehaviour'
		{
			newLeafNode(otherlv_1, grammarAccess.getEquationBehaviourAccess().getEquationBehaviourKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEquationBehaviourAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEquationBehaviourRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getEquationBehaviourAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='Parameters'
			{
				newLeafNode(otherlv_4, grammarAccess.getEquationBehaviourAccess().getParametersKeyword_4_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getEquationBehaviourAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationBehaviourAccess().getParametersParameterClassParserRuleCall_4_2_0());
					}
					lv_parameters_6_0=ruleParameterClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationBehaviourRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_6_0,
							"org.cirad.dsl.xtext.Breactive.ParameterClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getEquationBehaviourAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEquationBehaviourAccess().getParametersParameterClassParserRuleCall_4_3_1_0());
						}
						lv_parameters_8_0=ruleParameterClass
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEquationBehaviourRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_8_0,
								"org.cirad.dsl.xtext.Breactive.ParameterClass");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getEquationBehaviourAccess().getRightParenthesisKeyword_4_4());
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationBehaviourAccess().getLocalvariableLocalVariableClassParserRuleCall_5_0_0());
					}
					lv_localvariable_10_0=ruleLocalVariableClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationBehaviourRule());
						}
						add(
							$current,
							"localvariable",
							lv_localvariable_10_0,
							"org.cirad.dsl.xtext.Breactive.LocalVariableClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationBehaviourAccess().getLocalvariableLocalVariableClassParserRuleCall_5_1_0());
					}
					lv_localvariable_11_0=ruleLocalVariableClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationBehaviourRule());
						}
						add(
							$current,
							"localvariable",
							lv_localvariable_11_0,
							"org.cirad.dsl.xtext.Breactive.LocalVariableClass");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_12='Equation'
		{
			newLeafNode(otherlv_12, grammarAccess.getEquationBehaviourAccess().getEquationKeyword_6());
		}
		otherlv_13='{'
		{
			newLeafNode(otherlv_13, grammarAccess.getEquationBehaviourAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEquationBehaviourAccess().getEquationEquationParserRuleCall_8_0());
				}
				lv_equation_14_0=ruleEquation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEquationBehaviourRule());
					}
					set(
						$current,
						"equation",
						lv_equation_14_0,
						"org.cirad.dsl.xtext.Breactive.Equation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getEquationBehaviourAccess().getRightCurlyBracketKeyword_9());
		}
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getEquationBehaviourAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleActivityBehavior
entryRuleActivityBehavior returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityBehaviorRule()); }
	iv_ruleActivityBehavior=ruleActivityBehavior
	{ $current=$iv_ruleActivityBehavior.current; }
	EOF;

// Rule ActivityBehavior
ruleActivityBehavior returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActivityBehaviorAccess().getActivityBehaviorAction_0(),
					$current);
			}
		)
		otherlv_1='ActivityBehavior'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivityBehaviorAccess().getActivityBehaviorKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getActivityBehaviorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActivityBehaviorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getActivityBehaviorAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='Parameters'
			{
				newLeafNode(otherlv_4, grammarAccess.getActivityBehaviorAccess().getParametersKeyword_4_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getActivityBehaviorAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityBehaviorAccess().getParametersParameterClassParserRuleCall_4_2_0());
					}
					lv_parameters_6_0=ruleParameterClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityBehaviorRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_6_0,
							"org.cirad.dsl.xtext.Breactive.ParameterClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getActivityBehaviorAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivityBehaviorAccess().getParametersParameterClassParserRuleCall_4_3_1_0());
						}
						lv_parameters_8_0=ruleParameterClass
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivityBehaviorRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_8_0,
								"org.cirad.dsl.xtext.Breactive.ParameterClass");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getActivityBehaviorAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityBehaviorAccess().getLocalvariableLocalVariableClassParserRuleCall_5_0_0());
					}
					lv_localvariable_10_0=ruleLocalVariableClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityBehaviorRule());
						}
						add(
							$current,
							"localvariable",
							lv_localvariable_10_0,
							"org.cirad.dsl.xtext.Breactive.LocalVariableClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityBehaviorAccess().getLocalvariableLocalVariableClassParserRuleCall_5_1_0());
					}
					lv_localvariable_11_0=ruleLocalVariableClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityBehaviorRule());
						}
						add(
							$current,
							"localvariable",
							lv_localvariable_11_0,
							"org.cirad.dsl.xtext.Breactive.LocalVariableClass");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityBehaviorAccess().getPrimitiveaactivitiesPrimitiveActivitiesParserRuleCall_6_0_0());
					}
					lv_primitiveaactivities_12_0=rulePrimitiveActivities
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityBehaviorRule());
						}
						add(
							$current,
							"primitiveaactivities",
							lv_primitiveaactivities_12_0,
							"org.cirad.dsl.xtext.Breactive.PrimitiveActivities");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityBehaviorAccess().getPrimitiveaactivitiesPrimitiveActivitiesParserRuleCall_6_1_0());
					}
					lv_primitiveaactivities_13_0=rulePrimitiveActivities
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityBehaviorRule());
						}
						add(
							$current,
							"primitiveaactivities",
							lv_primitiveaactivities_13_0,
							"org.cirad.dsl.xtext.Breactive.PrimitiveActivities");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getActivityBehaviorAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleActivityDiagramBehavior
entryRuleActivityDiagramBehavior returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActivityDiagramBehaviorRule()); }
	iv_ruleActivityDiagramBehavior=ruleActivityDiagramBehavior
	{ $current=$iv_ruleActivityDiagramBehavior.current; }
	EOF;

// Rule ActivityDiagramBehavior
ruleActivityDiagramBehavior returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActivityDiagramBehaviorAccess().getActivityDiagramBehaviorAction_0(),
					$current);
			}
		)
		otherlv_1='ActivityDiagramBehavior'
		{
			newLeafNode(otherlv_1, grammarAccess.getActivityDiagramBehaviorAccess().getActivityDiagramBehaviorKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getActivityDiagramBehaviorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActivityDiagramBehaviorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getActivityDiagramBehaviorAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='Parameters'
			{
				newLeafNode(otherlv_4, grammarAccess.getActivityDiagramBehaviorAccess().getParametersKeyword_4_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getActivityDiagramBehaviorAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityDiagramBehaviorAccess().getParametersParameterClassParserRuleCall_4_2_0());
					}
					lv_parameters_6_0=ruleParameterClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityDiagramBehaviorRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_6_0,
							"org.cirad.dsl.xtext.Breactive.ParameterClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getActivityDiagramBehaviorAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActivityDiagramBehaviorAccess().getParametersParameterClassParserRuleCall_4_3_1_0());
						}
						lv_parameters_8_0=ruleParameterClass
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActivityDiagramBehaviorRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_8_0,
								"org.cirad.dsl.xtext.Breactive.ParameterClass");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getActivityDiagramBehaviorAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityDiagramBehaviorAccess().getLocalvariableLocalVariableClassParserRuleCall_5_0_0());
					}
					lv_localvariable_10_0=ruleLocalVariableClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityDiagramBehaviorRule());
						}
						add(
							$current,
							"localvariable",
							lv_localvariable_10_0,
							"org.cirad.dsl.xtext.Breactive.LocalVariableClass");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getActivityDiagramBehaviorAccess().getLocalvariableLocalVariableClassParserRuleCall_5_1_0());
					}
					lv_localvariable_11_0=ruleLocalVariableClass
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActivityDiagramBehaviorRule());
						}
						add(
							$current,
							"localvariable",
							lv_localvariable_11_0,
							"org.cirad.dsl.xtext.Breactive.LocalVariableClass");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getActivityDiagramBehaviorAccess().getStartStartParserRuleCall_6_0());
				}
				lv_start_12_0=ruleStart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActivityDiagramBehaviorRule());
					}
					set(
						$current,
						"start",
						lv_start_12_0,
						"org.cirad.dsl.xtext.Breactive.Start");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getActivityDiagramBehaviorAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEquation
entryRuleEquation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquationRule()); }
	iv_ruleEquation=ruleEquation
	{ $current=$iv_ruleEquation.current; }
	EOF;

// Rule Equation
ruleEquation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEquationAccess().getLeftDeclaredAttributesParserRuleCall_0_0());
				}
				lv_left_0_0=ruleDeclaredAttributes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEquationRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredAttributes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getEquationAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEquationAccess().getRightArithmeticFCExpressionParserRuleCall_2_0());
				}
				lv_right_2_0=ruleArithmeticFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEquationRule());
					}
					set(
						$current,
						"right",
						lv_right_2_0,
						"org.cirad.dsl.xtext.Breactive.ArithmeticFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArithmeticFunction
entryRuleArithmeticFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticFunctionRule()); }
	iv_ruleArithmeticFunction=ruleArithmeticFunction
	{ $current=$iv_ruleArithmeticFunction.current; }
	EOF;

// Rule ArithmeticFunction
ruleArithmeticFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithmeticFunctionAccess().getArithmeticFunctionMultiplicationParserRuleCall_0());
		}
		this_ArithmeticFunctionMultiplication_0=ruleArithmeticFunctionMultiplication
		{
			$current = $this_ArithmeticFunctionMultiplication_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmeticFunctionAccess().getArithmeticFunctionPlusParserRuleCall_1());
		}
		this_ArithmeticFunctionPlus_1=ruleArithmeticFunctionPlus
		{
			$current = $this_ArithmeticFunctionPlus_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArithmeticFunctionMultiplication
entryRuleArithmeticFunctionMultiplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticFunctionMultiplicationRule()); }
	iv_ruleArithmeticFunctionMultiplication=ruleArithmeticFunctionMultiplication
	{ $current=$iv_ruleArithmeticFunctionMultiplication.current; }
	EOF;

// Rule ArithmeticFunctionMultiplication
ruleArithmeticFunctionMultiplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='+'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getArithmeticFunctionMultiplicationAccess().getNamePlusSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArithmeticFunctionMultiplicationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='-'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getArithmeticFunctionMultiplicationAccess().getNameHyphenMinusKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArithmeticFunctionMultiplicationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleArithmeticFunctionPlus
entryRuleArithmeticFunctionPlus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticFunctionPlusRule()); }
	iv_ruleArithmeticFunctionPlus=ruleArithmeticFunctionPlus
	{ $current=$iv_ruleArithmeticFunctionPlus.current; }
	EOF;

// Rule ArithmeticFunctionPlus
ruleArithmeticFunctionPlus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='/'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getArithmeticFunctionPlusAccess().getNameSolidusKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArithmeticFunctionPlusRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='*'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getArithmeticFunctionPlusAccess().getNameAsteriskKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArithmeticFunctionPlusRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleMathFunction
entryRuleMathFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMathFunctionRule()); }
	iv_ruleMathFunction=ruleMathFunction
	{ $current=$iv_ruleMathFunction.current; }
	EOF;

// Rule MathFunction
ruleMathFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getMathFunctionAccess().getUnaryMathBinaryFunctionParserRuleCall());
	}
	this_UnaryMathBinaryFunction_0=ruleUnaryMathBinaryFunction
	{
		$current = $this_UnaryMathBinaryFunction_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleUnaryMathBinaryFunction
entryRuleUnaryMathBinaryFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryMathBinaryFunctionRule()); }
	iv_ruleUnaryMathBinaryFunction=ruleUnaryMathBinaryFunction
	{ $current=$iv_ruleUnaryMathBinaryFunction.current; }
	EOF;

// Rule UnaryMathBinaryFunction
ruleUnaryMathBinaryFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='sqrt'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getUnaryMathBinaryFunctionAccess().getNameSqrtKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnaryMathBinaryFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='random'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getUnaryMathBinaryFunctionAccess().getNameRandomKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnaryMathBinaryFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
				    |
				lv_name_0_3='floor'
				{
					newLeafNode(lv_name_0_3, grammarAccess.getUnaryMathBinaryFunctionAccess().getNameFloorKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnaryMathBinaryFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_3, null);
				}
				    |
				lv_name_0_4='exp'
				{
					newLeafNode(lv_name_0_4, grammarAccess.getUnaryMathBinaryFunctionAccess().getNameExpKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnaryMathBinaryFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_4, null);
				}
			)
		)
	)
;

// Entry rule entryRuleCountFunction
entryRuleCountFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountFunctionRule()); }
	iv_ruleCountFunction=ruleCountFunction
	{ $current=$iv_ruleCountFunction.current; }
	EOF;

// Rule CountFunction
ruleCountFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='count'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getCountFunctionAccess().getNameCountKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCountFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "count");
			}
		)
	)
;

// Entry rule entryRuleSimpleLocationNamedFunction
entryRuleSimpleLocationNamedFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleLocationNamedFunctionRule()); }
	iv_ruleSimpleLocationNamedFunction=ruleSimpleLocationNamedFunction
	{ $current=$iv_ruleSimpleLocationNamedFunction.current; }
	EOF;

// Rule SimpleLocationNamedFunction
ruleSimpleLocationNamedFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleLocationNamedFunctionAccess().getMaxOneOfLocationFunctionParserRuleCall_0());
		}
		this_MaxOneOfLocationFunction_0=ruleMaxOneOfLocationFunction
		{
			$current = $this_MaxOneOfLocationFunction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleLocationNamedFunctionAccess().getSelectConditionalLocationFunctionParserRuleCall_1());
		}
		this_SelectConditionalLocationFunction_1=ruleSelectConditionalLocationFunction
		{
			$current = $this_SelectConditionalLocationFunction_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleLocationNamedFunctionAccess().getOneOfLocationFunctionParserRuleCall_2());
		}
		this_OneOfLocationFunction_2=ruleOneOfLocationFunction
		{
			$current = $this_OneOfLocationFunction_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleLocationNamedFunctionAccess().getLocationPrimitiveFunctionParserRuleCall_3());
		}
		this_LocationPrimitiveFunction_3=ruleLocationPrimitiveFunction
		{
			$current = $this_LocationPrimitiveFunction_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMaxOneOfLocationFunction
entryRuleMaxOneOfLocationFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxOneOfLocationFunctionRule()); }
	iv_ruleMaxOneOfLocationFunction=ruleMaxOneOfLocationFunction
	{ $current=$iv_ruleMaxOneOfLocationFunction.current; }
	EOF;

// Rule MaxOneOfLocationFunction
ruleMaxOneOfLocationFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='max-one-of'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getMaxOneOfLocationFunctionAccess().getNameMaxOneOfKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getMaxOneOfLocationFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "max-one-of");
			}
		)
	)
;

// Entry rule entryRuleSelectConditionalLocationFunction
entryRuleSelectConditionalLocationFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectConditionalLocationFunctionRule()); }
	iv_ruleSelectConditionalLocationFunction=ruleSelectConditionalLocationFunction
	{ $current=$iv_ruleSelectConditionalLocationFunction.current; }
	EOF;

// Rule SelectConditionalLocationFunction
ruleSelectConditionalLocationFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='select a location'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSelectConditionalLocationFunctionAccess().getNameSelectALocationKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSelectConditionalLocationFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "select a location");
			}
		)
	)
;

// Entry rule entryRuleOneOfLocationFunction
entryRuleOneOfLocationFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOneOfLocationFunctionRule()); }
	iv_ruleOneOfLocationFunction=ruleOneOfLocationFunction
	{ $current=$iv_ruleOneOfLocationFunction.current; }
	EOF;

// Rule OneOfLocationFunction
ruleOneOfLocationFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='one-of'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getOneOfLocationFunctionAccess().getNameOneOfKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOneOfLocationFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "one-of");
			}
		)
	)
;

// Entry rule entryRuleLocationPrimitiveFunction
entryRuleLocationPrimitiveFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationPrimitiveFunctionRule()); }
	iv_ruleLocationPrimitiveFunction=ruleLocationPrimitiveFunction
	{ $current=$iv_ruleLocationPrimitiveFunction.current; }
	EOF;

// Rule LocationPrimitiveFunction
ruleLocationPrimitiveFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='here'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getLocationPrimitiveFunctionAccess().getNameHereKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationPrimitiveFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='top'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getLocationPrimitiveFunctionAccess().getNameTopKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationPrimitiveFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
				    |
				lv_name_0_3='left'
				{
					newLeafNode(lv_name_0_3, grammarAccess.getLocationPrimitiveFunctionAccess().getNameLeftKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationPrimitiveFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_3, null);
				}
				    |
				lv_name_0_4='right'
				{
					newLeafNode(lv_name_0_4, grammarAccess.getLocationPrimitiveFunctionAccess().getNameRightKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationPrimitiveFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_4, null);
				}
				    |
				lv_name_0_5='grid'
				{
					newLeafNode(lv_name_0_5, grammarAccess.getLocationPrimitiveFunctionAccess().getNameGridKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationPrimitiveFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_5, null);
				}
				    |
				lv_name_0_6='bottom'
				{
					newLeafNode(lv_name_0_6, grammarAccess.getLocationPrimitiveFunctionAccess().getNameBottomKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationPrimitiveFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_6, null);
				}
				    |
				lv_name_0_7='neighborhood'
				{
					newLeafNode(lv_name_0_7, grammarAccess.getLocationPrimitiveFunctionAccess().getNameNeighborhoodKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocationPrimitiveFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_7, null);
				}
			)
		)
	)
;

// Entry rule entryRuleLocationSetNamedFunction
entryRuleLocationSetNamedFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationSetNamedFunctionRule()); }
	iv_ruleLocationSetNamedFunction=ruleLocationSetNamedFunction
	{ $current=$iv_ruleLocationSetNamedFunction.current; }
	EOF;

// Rule LocationSetNamedFunction
ruleLocationSetNamedFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLocationSetNamedFunctionAccess().getNeighborhoodLocationFunctionParserRuleCall_0());
		}
		this_NeighborhoodLocationFunction_0=ruleNeighborhoodLocationFunction
		{
			$current = $this_NeighborhoodLocationFunction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLocationSetNamedFunctionAccess().getSpaceLocationFunctionParserRuleCall_1());
		}
		this_SpaceLocationFunction_1=ruleSpaceLocationFunction
		{
			$current = $this_SpaceLocationFunction_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLocationSetNamedFunctionAccess().getUnionLocationFunctionParserRuleCall_2());
		}
		this_UnionLocationFunction_2=ruleUnionLocationFunction
		{
			$current = $this_UnionLocationFunction_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNeighborhoodLocationFunction
entryRuleNeighborhoodLocationFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNeighborhoodLocationFunctionRule()); }
	iv_ruleNeighborhoodLocationFunction=ruleNeighborhoodLocationFunction
	{ $current=$iv_ruleNeighborhoodLocationFunction.current; }
	EOF;

// Rule NeighborhoodLocationFunction
ruleNeighborhoodLocationFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='neighborhood'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getNeighborhoodLocationFunctionAccess().getNameNeighborhoodKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNeighborhoodLocationFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "neighborhood");
			}
		)
	)
;

// Entry rule entryRuleSpaceLocationFunction
entryRuleSpaceLocationFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpaceLocationFunctionRule()); }
	iv_ruleSpaceLocationFunction=ruleSpaceLocationFunction
	{ $current=$iv_ruleSpaceLocationFunction.current; }
	EOF;

// Rule SpaceLocationFunction
ruleSpaceLocationFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='grid'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSpaceLocationFunctionAccess().getNameGridKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSpaceLocationFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "grid");
			}
		)
	)
;

// Entry rule entryRuleUnionLocationFunction
entryRuleUnionLocationFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnionLocationFunctionRule()); }
	iv_ruleUnionLocationFunction=ruleUnionLocationFunction
	{ $current=$iv_ruleUnionLocationFunction.current; }
	EOF;

// Rule UnionLocationFunction
ruleUnionLocationFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='union-location'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getUnionLocationFunctionAccess().getNameUnionLocationKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getUnionLocationFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "union-location");
			}
		)
	)
;

// Entry rule entryRuleBooleanPrimitiveFunction
entryRuleBooleanPrimitiveFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanPrimitiveFunctionRule()); }
	iv_ruleBooleanPrimitiveFunction=ruleBooleanPrimitiveFunction
	{ $current=$iv_ruleBooleanPrimitiveFunction.current; }
	EOF;

// Rule BooleanPrimitiveFunction
ruleBooleanPrimitiveFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='true'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getBooleanPrimitiveFunctionAccess().getNameTrueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanPrimitiveFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='false'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getBooleanPrimitiveFunctionAccess().getNameFalseKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanPrimitiveFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanSetFunction
entryRuleBooleanSetFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanSetFunctionRule()); }
	iv_ruleBooleanSetFunction=ruleBooleanSetFunction
	{ $current=$iv_ruleBooleanSetFunction.current; }
	EOF;

// Rule BooleanSetFunction
ruleBooleanSetFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='set'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getBooleanSetFunctionAccess().getNameSetKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBooleanSetFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "set");
			}
		)
	)
;

// Entry rule entryRuleBooleanGetFunction
entryRuleBooleanGetFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanGetFunctionRule()); }
	iv_ruleBooleanGetFunction=ruleBooleanGetFunction
	{ $current=$iv_ruleBooleanGetFunction.current; }
	EOF;

// Rule BooleanGetFunction
ruleBooleanGetFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='get'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getBooleanGetFunctionAccess().getNameGetKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBooleanGetFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "get");
			}
		)
	)
;

// Entry rule entryRuleBooleanNumericComparisonFunction
entryRuleBooleanNumericComparisonFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanNumericComparisonFunctionRule()); }
	iv_ruleBooleanNumericComparisonFunction=ruleBooleanNumericComparisonFunction
	{ $current=$iv_ruleBooleanNumericComparisonFunction.current; }
	EOF;

// Rule BooleanNumericComparisonFunction
ruleBooleanNumericComparisonFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='>='
				{
					newLeafNode(lv_name_0_1, grammarAccess.getBooleanNumericComparisonFunctionAccess().getNameGreaterThanSignEqualsSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanNumericComparisonFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='>'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getBooleanNumericComparisonFunctionAccess().getNameGreaterThanSignKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanNumericComparisonFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
				    |
				lv_name_0_3='!='
				{
					newLeafNode(lv_name_0_3, grammarAccess.getBooleanNumericComparisonFunctionAccess().getNameExclamationMarkEqualsSignKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanNumericComparisonFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_3, null);
				}
				    |
				lv_name_0_4='<'
				{
					newLeafNode(lv_name_0_4, grammarAccess.getBooleanNumericComparisonFunctionAccess().getNameLessThanSignKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanNumericComparisonFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_4, null);
				}
				    |
				lv_name_0_5='<='
				{
					newLeafNode(lv_name_0_5, grammarAccess.getBooleanNumericComparisonFunctionAccess().getNameLessThanSignEqualsSignKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanNumericComparisonFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_5, null);
				}
				    |
				lv_name_0_6='='
				{
					newLeafNode(lv_name_0_6, grammarAccess.getBooleanNumericComparisonFunctionAccess().getNameEqualsSignKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanNumericComparisonFunctionRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_6, null);
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanIsOccuppiedLocationFunction
entryRuleBooleanIsOccuppiedLocationFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanIsOccuppiedLocationFunctionRule()); }
	iv_ruleBooleanIsOccuppiedLocationFunction=ruleBooleanIsOccuppiedLocationFunction
	{ $current=$iv_ruleBooleanIsOccuppiedLocationFunction.current; }
	EOF;

// Rule BooleanIsOccuppiedLocationFunction
ruleBooleanIsOccuppiedLocationFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='occupied'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getBooleanIsOccuppiedLocationFunctionAccess().getNameOccupiedKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBooleanIsOccuppiedLocationFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "occupied");
			}
		)
	)
;

// Entry rule entryRuleBooleanLogicFunction
entryRuleBooleanLogicFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLogicFunctionRule()); }
	iv_ruleBooleanLogicFunction=ruleBooleanLogicFunction
	{ $current=$iv_ruleBooleanLogicFunction.current; }
	EOF;

// Rule BooleanLogicFunction
ruleBooleanLogicFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBooleanLogicFunctionAccess().getBooleanUnaryLogicFunctionParserRuleCall_0());
		}
		this_BooleanUnaryLogicFunction_0=ruleBooleanUnaryLogicFunction
		{
			$current = $this_BooleanUnaryLogicFunction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanLogicFunctionAccess().getBooleanANDBinaryLogicFunctionParserRuleCall_1());
		}
		this_BooleanANDBinaryLogicFunction_1=ruleBooleanANDBinaryLogicFunction
		{
			$current = $this_BooleanANDBinaryLogicFunction_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanLogicFunctionAccess().getBooleanORBinaryLogicFunctionParserRuleCall_2());
		}
		this_BooleanORBinaryLogicFunction_2=ruleBooleanORBinaryLogicFunction
		{
			$current = $this_BooleanORBinaryLogicFunction_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanUnaryLogicFunction
entryRuleBooleanUnaryLogicFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanUnaryLogicFunctionRule()); }
	iv_ruleBooleanUnaryLogicFunction=ruleBooleanUnaryLogicFunction
	{ $current=$iv_ruleBooleanUnaryLogicFunction.current; }
	EOF;

// Rule BooleanUnaryLogicFunction
ruleBooleanUnaryLogicFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='NOT'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getBooleanUnaryLogicFunctionAccess().getNameNOTKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBooleanUnaryLogicFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "NOT");
			}
		)
	)
;

// Entry rule entryRuleBooleanANDBinaryLogicFunction
entryRuleBooleanANDBinaryLogicFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanANDBinaryLogicFunctionRule()); }
	iv_ruleBooleanANDBinaryLogicFunction=ruleBooleanANDBinaryLogicFunction
	{ $current=$iv_ruleBooleanANDBinaryLogicFunction.current; }
	EOF;

// Rule BooleanANDBinaryLogicFunction
ruleBooleanANDBinaryLogicFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='AND'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getBooleanANDBinaryLogicFunctionAccess().getNameANDKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBooleanANDBinaryLogicFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "AND");
			}
		)
	)
;

// Entry rule entryRuleBooleanORBinaryLogicFunction
entryRuleBooleanORBinaryLogicFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanORBinaryLogicFunctionRule()); }
	iv_ruleBooleanORBinaryLogicFunction=ruleBooleanORBinaryLogicFunction
	{ $current=$iv_ruleBooleanORBinaryLogicFunction.current; }
	EOF;

// Rule BooleanORBinaryLogicFunction
ruleBooleanORBinaryLogicFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='OR'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getBooleanORBinaryLogicFunctionAccess().getNameORKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBooleanORBinaryLogicFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "OR");
			}
		)
	)
;

// Entry rule entryRuleEntityNamedFunction
entryRuleEntityNamedFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityNamedFunctionRule()); }
	iv_ruleEntityNamedFunction=ruleEntityNamedFunction
	{ $current=$iv_ruleEntityNamedFunction.current; }
	EOF;

// Rule EntityNamedFunction
ruleEntityNamedFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEntityNamedFunctionAccess().getEntityOneOfFunctionParserRuleCall_0());
		}
		this_EntityOneOfFunction_0=ruleEntityOneOfFunction
		{
			$current = $this_EntityOneOfFunction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityNamedFunctionAccess().getEntityQuantifierFunctionParserRuleCall_1());
		}
		this_EntityQuantifierFunction_1=ruleEntityQuantifierFunction
		{
			$current = $this_EntityQuantifierFunction_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEntityQuantifierFunction
entryRuleEntityQuantifierFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityQuantifierFunctionRule()); }
	iv_ruleEntityQuantifierFunction=ruleEntityQuantifierFunction
	{ $current=$iv_ruleEntityQuantifierFunction.current; }
	EOF;

// Rule EntityQuantifierFunction
ruleEntityQuantifierFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEntityQuantifierFunctionAccess().getEntityAllQuantifierFunctionParserRuleCall_0());
		}
		this_EntityAllQuantifierFunction_0=ruleEntityAllQuantifierFunction
		{
			$current = $this_EntityAllQuantifierFunction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityQuantifierFunctionAccess().getEntityAnyQuantifierFunctionParserRuleCall_1());
		}
		this_EntityAnyQuantifierFunction_1=ruleEntityAnyQuantifierFunction
		{
			$current = $this_EntityAnyQuantifierFunction_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEntityAnyQuantifierFunction
entryRuleEntityAnyQuantifierFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityAnyQuantifierFunctionRule()); }
	iv_ruleEntityAnyQuantifierFunction=ruleEntityAnyQuantifierFunction
	{ $current=$iv_ruleEntityAnyQuantifierFunction.current; }
	EOF;

// Rule EntityAnyQuantifierFunction
ruleEntityAnyQuantifierFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='any'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEntityAnyQuantifierFunctionAccess().getNameAnyKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEntityAnyQuantifierFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "any");
			}
		)
	)
;

// Entry rule entryRuleEntityAllQuantifierFunction
entryRuleEntityAllQuantifierFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityAllQuantifierFunctionRule()); }
	iv_ruleEntityAllQuantifierFunction=ruleEntityAllQuantifierFunction
	{ $current=$iv_ruleEntityAllQuantifierFunction.current; }
	EOF;

// Rule EntityAllQuantifierFunction
ruleEntityAllQuantifierFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='all'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEntityAllQuantifierFunctionAccess().getNameAllKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEntityAllQuantifierFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "all");
			}
		)
	)
;

// Entry rule entryRuleEntitySetCreateFunction
entryRuleEntitySetCreateFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntitySetCreateFunctionRule()); }
	iv_ruleEntitySetCreateFunction=ruleEntitySetCreateFunction
	{ $current=$iv_ruleEntitySetCreateFunction.current; }
	EOF;

// Rule EntitySetCreateFunction
ruleEntitySetCreateFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='Create '
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEntitySetCreateFunctionAccess().getNameCreateKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEntitySetCreateFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "Create ");
			}
		)
	)
;

// Entry rule entryRuleEntitySetOnLocationFunction
entryRuleEntitySetOnLocationFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntitySetOnLocationFunctionRule()); }
	iv_ruleEntitySetOnLocationFunction=ruleEntitySetOnLocationFunction
	{ $current=$iv_ruleEntitySetOnLocationFunction.current; }
	EOF;

// Rule EntitySetOnLocationFunction
ruleEntitySetOnLocationFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='on'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEntitySetOnLocationFunctionAccess().getNameOnKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEntitySetOnLocationFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "on");
			}
		)
	)
;

// Entry rule entryRuleSpaceInitFunction
entryRuleSpaceInitFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpaceInitFunctionRule()); }
	iv_ruleSpaceInitFunction=ruleSpaceInitFunction
	{ $current=$iv_ruleSpaceInitFunction.current; }
	EOF;

// Rule SpaceInitFunction
ruleSpaceInitFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='Create grid'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSpaceInitFunctionAccess().getNameCreateGridKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSpaceInitFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "Create grid");
			}
		)
	)
;

// Entry rule entryRuleEntityOneOfFunction
entryRuleEntityOneOfFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityOneOfFunctionRule()); }
	iv_ruleEntityOneOfFunction=ruleEntityOneOfFunction
	{ $current=$iv_ruleEntityOneOfFunction.current; }
	EOF;

// Rule EntityOneOfFunction
ruleEntityOneOfFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='one-of'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEntityOneOfFunctionAccess().getNameOneOfKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEntityOneOfFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "one-of");
			}
		)
	)
;

// Entry rule entryRuleGetVariableFunction
entryRuleGetVariableFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetVariableFunctionRule()); }
	iv_ruleGetVariableFunction=ruleGetVariableFunction
	{ $current=$iv_ruleGetVariableFunction.current; }
	EOF;

// Rule GetVariableFunction
ruleGetVariableFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='of'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getGetVariableFunctionAccess().getNameOfKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getGetVariableFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "of");
			}
		)
	)
;

// Entry rule entryRuleGetEntityNamedFunction
entryRuleGetEntityNamedFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetEntityNamedFunctionRule()); }
	iv_ruleGetEntityNamedFunction=ruleGetEntityNamedFunction
	{ $current=$iv_ruleGetEntityNamedFunction.current; }
	EOF;

// Rule GetEntityNamedFunction
ruleGetEntityNamedFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='entity'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getGetEntityNamedFunctionAccess().getNameEntityKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getGetEntityNamedFunctionRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "entity");
			}
		)
	)
;

// Entry rule entryRuleFunctionCallExpression
entryRuleFunctionCallExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallExpressionRule()); }
	iv_ruleFunctionCallExpression=ruleFunctionCallExpression
	{ $current=$iv_ruleFunctionCallExpression.current; }
	EOF;

// Rule FunctionCallExpression
ruleFunctionCallExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFunctionCallExpressionAccess().getNumericNamedFCExpressionParserRuleCall_0());
		}
		this_NumericNamedFCExpression_0=ruleNumericNamedFCExpression
		{
			$current = $this_NumericNamedFCExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionCallExpressionAccess().getLocationNamedFCExpressionParserRuleCall_1());
		}
		this_LocationNamedFCExpression_1=ruleLocationNamedFCExpression
		{
			$current = $this_LocationNamedFCExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionCallExpressionAccess().getBooleanNamedFCExpressionParserRuleCall_2());
		}
		this_BooleanNamedFCExpression_2=ruleBooleanNamedFCExpression
		{
			$current = $this_BooleanNamedFCExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionCallExpressionAccess().getEntityNamedFCExpressionParserRuleCall_3());
		}
		this_EntityNamedFCExpression_3=ruleEntityNamedFCExpression
		{
			$current = $this_EntityNamedFCExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionCallExpressionAccess().getGetNamedFCExpressionParserRuleCall_4());
		}
		this_GetNamedFCExpression_4=ruleGetNamedFCExpression
		{
			$current = $this_GetNamedFCExpression_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanNamedFCExpression
entryRuleBooleanNamedFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanNamedFCExpressionRule()); }
	iv_ruleBooleanNamedFCExpression=ruleBooleanNamedFCExpression
	{ $current=$iv_ruleBooleanNamedFCExpression.current; }
	EOF;

// Rule BooleanNamedFCExpression
ruleBooleanNamedFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBooleanNamedFCExpressionAccess().getBooleanPrimitiveFCExpressionParserRuleCall_0());
		}
		this_BooleanPrimitiveFCExpression_0=ruleBooleanPrimitiveFCExpression
		{
			$current = $this_BooleanPrimitiveFCExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanNamedFCExpressionAccess().getBooleanSetValueFCExpressionParserRuleCall_1());
		}
		this_BooleanSetValueFCExpression_1=ruleBooleanSetValueFCExpression
		{
			$current = $this_BooleanSetValueFCExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanNamedFCExpressionAccess().getBooleanGetValueFCExpressionParserRuleCall_2());
		}
		this_BooleanGetValueFCExpression_2=ruleBooleanGetValueFCExpression
		{
			$current = $this_BooleanGetValueFCExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanNamedFCExpressionAccess().getBooleanNumericComparisonFCExpressionParserRuleCall_3());
		}
		this_BooleanNumericComparisonFCExpression_3=ruleBooleanNumericComparisonFCExpression
		{
			$current = $this_BooleanNumericComparisonFCExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanNamedFCExpressionAccess().getBooleanIsOccuppiedLocationFCExpressionParserRuleCall_4());
		}
		this_BooleanIsOccuppiedLocationFCExpression_4=ruleBooleanIsOccuppiedLocationFCExpression
		{
			$current = $this_BooleanIsOccuppiedLocationFCExpression_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanNamedFCExpressionAccess().getBooleanQuantifiedEntitySetFCEpressionParserRuleCall_5());
		}
		this_BooleanQuantifiedEntitySetFCEpression_5=ruleBooleanQuantifiedEntitySetFCEpression
		{
			$current = $this_BooleanQuantifiedEntitySetFCEpression_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanNamedFCExpressionAccess().getBooleanUnaryLogicFCExpressionParserRuleCall_6());
		}
		this_BooleanUnaryLogicFCExpression_6=ruleBooleanUnaryLogicFCExpression
		{
			$current = $this_BooleanUnaryLogicFCExpression_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanQuantifiedEntitySetFCEpression
entryRuleBooleanQuantifiedEntitySetFCEpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanQuantifiedEntitySetFCEpressionRule()); }
	iv_ruleBooleanQuantifiedEntitySetFCEpression=ruleBooleanQuantifiedEntitySetFCEpression
	{ $current=$iv_ruleBooleanQuantifiedEntitySetFCEpression.current; }
	EOF;

// Rule BooleanQuantifiedEntitySetFCEpression
ruleBooleanQuantifiedEntitySetFCEpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanQuantifiedEntitySetFCEpressionAccess().getFunctionEntityQuantifierFunctionParserRuleCall_0_0());
				}
				lv_function_0_0=ruleEntityQuantifierFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanQuantifiedEntitySetFCEpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_0_0,
						"org.cirad.dsl.xtext.Breactive.EntityQuantifierFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanQuantifiedEntitySetFCEpressionAccess().getArgumentsDeclaredEntitiesParserRuleCall_1_0());
				}
				lv_arguments_1_0=ruleDeclaredEntities
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanQuantifiedEntitySetFCEpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_1_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredEntities");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='on'
		{
			newLeafNode(otherlv_2, grammarAccess.getBooleanQuantifiedEntitySetFCEpressionAccess().getOnKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanQuantifiedEntitySetFCEpressionAccess().getArgumentsLocationPrimitiveFCExpressionParserRuleCall_3_0());
				}
				lv_arguments_3_0=ruleLocationPrimitiveFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanQuantifiedEntitySetFCEpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_3_0,
						"org.cirad.dsl.xtext.Breactive.LocationPrimitiveFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='has'
		{
			newLeafNode(otherlv_4, grammarAccess.getBooleanQuantifiedEntitySetFCEpressionAccess().getHasKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanQuantifiedEntitySetFCEpressionAccess().getArgumentsBooleanNumericComparisonFCExpressionParserRuleCall_5_0());
				}
				lv_arguments_5_0=ruleBooleanNumericComparisonFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanQuantifiedEntitySetFCEpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_5_0,
						"org.cirad.dsl.xtext.Breactive.BooleanNumericComparisonFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanPrimitiveFCExpression
entryRuleBooleanPrimitiveFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanPrimitiveFCExpressionRule()); }
	iv_ruleBooleanPrimitiveFCExpression=ruleBooleanPrimitiveFCExpression
	{ $current=$iv_ruleBooleanPrimitiveFCExpression.current; }
	EOF;

// Rule BooleanPrimitiveFCExpression
ruleBooleanPrimitiveFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBooleanPrimitiveFCExpressionAccess().getFunctionBooleanPrimitiveFunctionParserRuleCall_0());
			}
			lv_function_0_0=ruleBooleanPrimitiveFunction
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBooleanPrimitiveFCExpressionRule());
				}
				set(
					$current,
					"function",
					lv_function_0_0,
					"org.cirad.dsl.xtext.Breactive.BooleanPrimitiveFunction");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBooleanSetValueFCExpression
entryRuleBooleanSetValueFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanSetValueFCExpressionRule()); }
	iv_ruleBooleanSetValueFCExpression=ruleBooleanSetValueFCExpression
	{ $current=$iv_ruleBooleanSetValueFCExpression.current; }
	EOF;

// Rule BooleanSetValueFCExpression
ruleBooleanSetValueFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanSetValueFCExpressionAccess().getFunctionBooleanSetFunctionParserRuleCall_0_0());
				}
				lv_function_0_0=ruleBooleanSetFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanSetValueFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_0_0,
						"org.cirad.dsl.xtext.Breactive.BooleanSetFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanSetValueFCExpressionAccess().getArgumentsDeclaredVariableParserRuleCall_1_0());
				}
				lv_arguments_1_0=ruleDeclaredVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanSetValueFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_1_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='as true'
		{
			newLeafNode(otherlv_2, grammarAccess.getBooleanSetValueFCExpressionAccess().getAsTrueKeyword_2());
		}
	)
;

// Entry rule entryRuleBooleanGetValueFCExpression
entryRuleBooleanGetValueFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanGetValueFCExpressionRule()); }
	iv_ruleBooleanGetValueFCExpression=ruleBooleanGetValueFCExpression
	{ $current=$iv_ruleBooleanGetValueFCExpression.current; }
	EOF;

// Rule BooleanGetValueFCExpression
ruleBooleanGetValueFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanGetValueFCExpressionAccess().getFunctionBooleanGetFunctionParserRuleCall_0_0());
				}
				lv_function_0_0=ruleBooleanGetFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanGetValueFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_0_0,
						"org.cirad.dsl.xtext.Breactive.BooleanGetFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanGetValueFCExpressionAccess().getArgumentsDeclaredVariableParserRuleCall_1_0());
				}
				lv_arguments_1_0=ruleDeclaredVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanGetValueFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_1_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='true'
		{
			newLeafNode(otherlv_2, grammarAccess.getBooleanGetValueFCExpressionAccess().getTrueKeyword_2());
		}
	)
;

// Entry rule entryRuleBooleanNumericComparisonFCExpression
entryRuleBooleanNumericComparisonFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanNumericComparisonFCExpressionRule()); }
	iv_ruleBooleanNumericComparisonFCExpression=ruleBooleanNumericComparisonFCExpression
	{ $current=$iv_ruleBooleanNumericComparisonFCExpression.current; }
	EOF;

// Rule BooleanNumericComparisonFCExpression
ruleBooleanNumericComparisonFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleanNumericComparisonFCExpressionAccess().getArgumentsDeclaredVariableParserRuleCall_0_0_0());
					}
					lv_arguments_0_1=ruleDeclaredVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanNumericComparisonFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_0_1,
							"org.cirad.dsl.xtext.Breactive.DeclaredVariable");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBooleanNumericComparisonFCExpressionAccess().getArgumentsConstantExpressionParserRuleCall_0_0_1());
					}
					lv_arguments_0_2=ruleConstantExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanNumericComparisonFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_0_2,
							"org.cirad.dsl.xtext.Breactive.ConstantExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanNumericComparisonFCExpressionAccess().getFunctionBooleanNumericComparisonFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleBooleanNumericComparisonFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanNumericComparisonFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.cirad.dsl.xtext.Breactive.BooleanNumericComparisonFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleanNumericComparisonFCExpressionAccess().getArgumentsDeclaredVariableParserRuleCall_2_0_0());
					}
					lv_arguments_2_1=ruleDeclaredVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanNumericComparisonFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_1,
							"org.cirad.dsl.xtext.Breactive.DeclaredVariable");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBooleanNumericComparisonFCExpressionAccess().getArgumentsConstantExpressionParserRuleCall_2_0_1());
					}
					lv_arguments_2_2=ruleConstantExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanNumericComparisonFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_2,
							"org.cirad.dsl.xtext.Breactive.ConstantExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleBooleanIsOccuppiedLocationFCExpression
entryRuleBooleanIsOccuppiedLocationFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanIsOccuppiedLocationFCExpressionRule()); }
	iv_ruleBooleanIsOccuppiedLocationFCExpression=ruleBooleanIsOccuppiedLocationFCExpression
	{ $current=$iv_ruleBooleanIsOccuppiedLocationFCExpression.current; }
	EOF;

// Rule BooleanIsOccuppiedLocationFCExpression
ruleBooleanIsOccuppiedLocationFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBooleanIsOccuppiedLocationFCExpressionAccess().getFunctionCallExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanIsOccuppiedLocationFCExpressionAccess().getArgumentsLocationPrimitiveFCExpressionParserRuleCall_1_0());
				}
				lv_arguments_1_0=ruleLocationPrimitiveFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanIsOccuppiedLocationFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_1_0,
						"org.cirad.dsl.xtext.Breactive.LocationPrimitiveFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='is '
		{
			newLeafNode(otherlv_2, grammarAccess.getBooleanIsOccuppiedLocationFCExpressionAccess().getIsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanIsOccuppiedLocationFCExpressionAccess().getArgumentsBooleanUnaryLogicFCExpressionParserRuleCall_3_0());
				}
				lv_arguments_3_0=ruleBooleanUnaryLogicFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanIsOccuppiedLocationFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_3_0,
						"org.cirad.dsl.xtext.Breactive.BooleanUnaryLogicFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanIsOccuppiedLocationFCExpressionAccess().getFunctionBooleanIsOccuppiedLocationFunctionParserRuleCall_4_0());
				}
				lv_function_4_0=ruleBooleanIsOccuppiedLocationFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanIsOccuppiedLocationFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_4_0,
						"org.cirad.dsl.xtext.Breactive.BooleanIsOccuppiedLocationFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='by'
			{
				newLeafNode(otherlv_5, grammarAccess.getBooleanIsOccuppiedLocationFCExpressionAccess().getByKeyword_5_0());
			}
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getBooleanIsOccuppiedLocationFCExpressionAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleanIsOccuppiedLocationFCExpressionAccess().getArgumentsEntitySetConditionalFCExpressionParserRuleCall_5_2_0());
					}
					lv_arguments_7_0=ruleEntitySetConditionalFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanIsOccuppiedLocationFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_7_0,
							"org.cirad.dsl.xtext.Breactive.EntitySetConditionalFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getBooleanIsOccuppiedLocationFCExpressionAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBooleanIsOccuppiedLocationFCExpressionAccess().getArgumentsEntitySetConditionalFCExpressionParserRuleCall_5_3_1_0());
						}
						lv_arguments_9_0=ruleEntitySetConditionalFCExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBooleanIsOccuppiedLocationFCExpressionRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_9_0,
								"org.cirad.dsl.xtext.Breactive.EntitySetConditionalFCExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getBooleanIsOccuppiedLocationFCExpressionAccess().getRightParenthesisKeyword_5_4());
			}
		)?
	)
;

// Entry rule entryRuleBooleanLogicFCExpression
entryRuleBooleanLogicFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLogicFCExpressionRule()); }
	iv_ruleBooleanLogicFCExpression=ruleBooleanLogicFCExpression
	{ $current=$iv_ruleBooleanLogicFCExpression.current; }
	EOF;

// Rule BooleanLogicFCExpression
ruleBooleanLogicFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getBooleanLogicFCExpressionAccess().getOrExprParserRuleCall());
	}
	this_OrExpr_0=ruleOrExpr
	{
		$current = $this_OrExpr_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAndExpr
entryRuleAndExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExprRule()); }
	iv_ruleAndExpr=ruleAndExpr
	{ $current=$iv_ruleAndExpr.current; }
	EOF;

// Rule AndExpr
ruleAndExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExprAccess().getPrimaryBooleanExpressionParserRuleCall_0());
		}
		this_PrimaryBooleanExpression_0=rulePrimaryBooleanExpression
		{
			$current = $this_PrimaryBooleanExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getAndExprAccess().getFunctionCallExpressionArgumentsAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExprAccess().getFunctionBooleanANDBinaryLogicFunctionParserRuleCall_1_1_0());
					}
					lv_function_2_0=ruleBooleanANDBinaryLogicFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExprRule());
						}
						set(
							$current,
							"function",
							lv_function_2_0,
							"org.cirad.dsl.xtext.Breactive.BooleanANDBinaryLogicFunction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExprAccess().getArgumentsPrimaryBooleanExpressionParserRuleCall_1_2_0());
					}
					lv_arguments_3_0=rulePrimaryBooleanExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExprRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_3_0,
							"org.cirad.dsl.xtext.Breactive.PrimaryBooleanExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOrExpr
entryRuleOrExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExprRule()); }
	iv_ruleOrExpr=ruleOrExpr
	{ $current=$iv_ruleOrExpr.current; }
	EOF;

// Rule OrExpr
ruleOrExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0());
		}
		this_AndExpr_0=ruleAndExpr
		{
			$current = $this_AndExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getOrExprAccess().getFunctionCallExpressionArgumentsAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExprAccess().getFunctionBooleanORBinaryLogicFunctionParserRuleCall_1_1_0());
					}
					lv_function_2_0=ruleBooleanORBinaryLogicFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExprRule());
						}
						set(
							$current,
							"function",
							lv_function_2_0,
							"org.cirad.dsl.xtext.Breactive.BooleanORBinaryLogicFunction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExprAccess().getArgumentsAndExprParserRuleCall_1_2_0());
					}
					lv_arguments_3_0=ruleAndExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExprRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_3_0,
							"org.cirad.dsl.xtext.Breactive.AndExpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimaryBooleanExpression
entryRulePrimaryBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryBooleanExpressionRule()); }
	iv_rulePrimaryBooleanExpression=rulePrimaryBooleanExpression
	{ $current=$iv_rulePrimaryBooleanExpression.current; }
	EOF;

// Rule PrimaryBooleanExpression
rulePrimaryBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getPrimaryBooleanExpressionAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getPrimaryBooleanExpressionAccess().getBooleanNamedFCExpressionParserRuleCall_1());
		}
		this_BooleanNamedFCExpression_1=ruleBooleanNamedFCExpression
		{
			$current = $this_BooleanNamedFCExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getPrimaryBooleanExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleBooleanUnaryLogicFCExpression
entryRuleBooleanUnaryLogicFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanUnaryLogicFCExpressionRule()); }
	iv_ruleBooleanUnaryLogicFCExpression=ruleBooleanUnaryLogicFCExpression
	{ $current=$iv_ruleBooleanUnaryLogicFCExpression.current; }
	EOF;

// Rule BooleanUnaryLogicFCExpression
ruleBooleanUnaryLogicFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBooleanUnaryLogicFCExpressionAccess().getFunctionBooleanUnaryLogicFunctionParserRuleCall_0());
			}
			lv_function_0_0=ruleBooleanUnaryLogicFunction
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBooleanUnaryLogicFCExpressionRule());
				}
				set(
					$current,
					"function",
					lv_function_0_0,
					"org.cirad.dsl.xtext.Breactive.BooleanUnaryLogicFunction");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleLocationNamedFCExpression
entryRuleLocationNamedFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationNamedFCExpressionRule()); }
	iv_ruleLocationNamedFCExpression=ruleLocationNamedFCExpression
	{ $current=$iv_ruleLocationNamedFCExpression.current; }
	EOF;

// Rule LocationNamedFCExpression
ruleLocationNamedFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLocationNamedFCExpressionAccess().getMaxOneOfLocationFCExpressionParserRuleCall_0());
		}
		this_MaxOneOfLocationFCExpression_0=ruleMaxOneOfLocationFCExpression
		{
			$current = $this_MaxOneOfLocationFCExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLocationNamedFCExpressionAccess().getSelectConditionalLocationFCExpressionParserRuleCall_1());
		}
		this_SelectConditionalLocationFCExpression_1=ruleSelectConditionalLocationFCExpression
		{
			$current = $this_SelectConditionalLocationFCExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLocationNamedFCExpressionAccess().getOneOfLocationFCExpressionParserRuleCall_2());
		}
		this_OneOfLocationFCExpression_2=ruleOneOfLocationFCExpression
		{
			$current = $this_OneOfLocationFCExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLocationNamedFCExpressionAccess().getLocationPrimitiveFCExpressionParserRuleCall_3());
		}
		this_LocationPrimitiveFCExpression_3=ruleLocationPrimitiveFCExpression
		{
			$current = $this_LocationPrimitiveFCExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLocationSetNamedFCExpression
entryRuleLocationSetNamedFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationSetNamedFCExpressionRule()); }
	iv_ruleLocationSetNamedFCExpression=ruleLocationSetNamedFCExpression
	{ $current=$iv_ruleLocationSetNamedFCExpression.current; }
	EOF;

// Rule LocationSetNamedFCExpression
ruleLocationSetNamedFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLocationSetNamedFCExpressionAccess().getNeighborFCExpressionParserRuleCall_0());
		}
		this_NeighborFCExpression_0=ruleNeighborFCExpression
		{
			$current = $this_NeighborFCExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLocationSetNamedFCExpressionAccess().getUnionLocationFCExpressionParserRuleCall_1());
		}
		this_UnionLocationFCExpression_1=ruleUnionLocationFCExpression
		{
			$current = $this_UnionLocationFCExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLocationSetNamedFCExpressionAccess().getSpaceFCExpressionParserRuleCall_2());
		}
		this_SpaceFCExpression_2=ruleSpaceFCExpression
		{
			$current = $this_SpaceFCExpression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUnionLocationFCExpression
entryRuleUnionLocationFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnionLocationFCExpressionRule()); }
	iv_ruleUnionLocationFCExpression=ruleUnionLocationFCExpression
	{ $current=$iv_ruleUnionLocationFCExpression.current; }
	EOF;

// Rule UnionLocationFCExpression
ruleUnionLocationFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnionLocationFCExpressionAccess().getFunctionCallExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnionLocationFCExpressionAccess().getFunctionUnionLocationFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleUnionLocationFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnionLocationFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.cirad.dsl.xtext.Breactive.UnionLocationFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getUnionLocationFCExpressionAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnionLocationFCExpressionAccess().getArgumentsLocationNamedFCExpressionParserRuleCall_2_1_0());
					}
					lv_arguments_3_0=ruleLocationNamedFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnionLocationFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_3_0,
							"org.cirad.dsl.xtext.Breactive.LocationNamedFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getUnionLocationFCExpressionAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUnionLocationFCExpressionAccess().getArgumentsLocationNamedFCExpressionParserRuleCall_2_2_1_0());
						}
						lv_arguments_5_0=ruleLocationNamedFCExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnionLocationFCExpressionRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_5_0,
								"org.cirad.dsl.xtext.Breactive.LocationNamedFCExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getUnionLocationFCExpressionAccess().getRightParenthesisKeyword_2_3());
			}
		)
	)
;

// Entry rule entryRuleNeighborFCExpression
entryRuleNeighborFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNeighborFCExpressionRule()); }
	iv_ruleNeighborFCExpression=ruleNeighborFCExpression
	{ $current=$iv_ruleNeighborFCExpression.current; }
	EOF;

// Rule NeighborFCExpression
ruleNeighborFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNeighborFCExpressionAccess().getFunctionCallExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNeighborFCExpressionAccess().getFunctionNeighborhoodLocationFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleNeighborhoodLocationFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNeighborFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.cirad.dsl.xtext.Breactive.NeighborhoodLocationFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSpaceFCExpression
entryRuleSpaceFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpaceFCExpressionRule()); }
	iv_ruleSpaceFCExpression=ruleSpaceFCExpression
	{ $current=$iv_ruleSpaceFCExpression.current; }
	EOF;

// Rule SpaceFCExpression
ruleSpaceFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSpaceFCExpressionAccess().getFunctionCallExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSpaceFCExpressionAccess().getFunctionSpaceLocationFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleSpaceLocationFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpaceFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.cirad.dsl.xtext.Breactive.SpaceLocationFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='of'
			{
				newLeafNode(otherlv_2, grammarAccess.getSpaceFCExpressionAccess().getOfKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpaceFCExpressionAccess().getArgumentsDeclaredEntitiesParserRuleCall_2_1_0());
					}
					lv_arguments_3_0=ruleDeclaredEntities
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpaceFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_3_0,
							"org.cirad.dsl.xtext.Breactive.DeclaredEntities");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_4='having '
			{
				newLeafNode(otherlv_4, grammarAccess.getSpaceFCExpressionAccess().getHavingKeyword_3_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getSpaceFCExpressionAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpaceFCExpressionAccess().getArgumentsBooleanLogicFCExpressionParserRuleCall_3_2_0());
					}
					lv_arguments_6_0=ruleBooleanLogicFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpaceFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_6_0,
							"org.cirad.dsl.xtext.Breactive.BooleanLogicFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getSpaceFCExpressionAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSpaceFCExpressionAccess().getArgumentsBooleanLogicFCExpressionParserRuleCall_3_3_1_0());
						}
						lv_arguments_8_0=ruleBooleanLogicFCExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSpaceFCExpressionRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_8_0,
								"org.cirad.dsl.xtext.Breactive.BooleanLogicFCExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getSpaceFCExpressionAccess().getRightParenthesisKeyword_3_4());
			}
		)?
	)
;

// Entry rule entryRuleSpaceInitFCExpression
entryRuleSpaceInitFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpaceInitFCExpressionRule()); }
	iv_ruleSpaceInitFCExpression=ruleSpaceInitFCExpression
	{ $current=$iv_ruleSpaceInitFCExpression.current; }
	EOF;

// Rule SpaceInitFCExpression
ruleSpaceInitFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSpaceInitFCExpressionAccess().getFunctionCallExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSpaceInitFCExpressionAccess().getFunctionSpaceInitFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleSpaceInitFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpaceInitFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.cirad.dsl.xtext.Breactive.SpaceInitFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='of'
			{
				newLeafNode(otherlv_2, grammarAccess.getSpaceInitFCExpressionAccess().getOfKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpaceInitFCExpressionAccess().getArgumentsDeclaredEntitiesParserRuleCall_2_1_0());
					}
					lv_arguments_3_0=ruleDeclaredEntities
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpaceInitFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_3_0,
							"org.cirad.dsl.xtext.Breactive.DeclaredEntities");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getSpaceInitFCExpressionAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpaceInitFCExpressionAccess().getArgumentsConstantExpressionParserRuleCall_3_1_0());
					}
					lv_arguments_5_0=ruleConstantExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpaceInitFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_5_0,
							"org.cirad.dsl.xtext.Breactive.ConstantExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getSpaceInitFCExpressionAccess().getCommaKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpaceInitFCExpressionAccess().getArgumentsConstantExpressionParserRuleCall_3_3_0());
					}
					lv_arguments_7_0=ruleConstantExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpaceInitFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_7_0,
							"org.cirad.dsl.xtext.Breactive.ConstantExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getSpaceInitFCExpressionAccess().getRightParenthesisKeyword_3_4());
			}
		)
	)
;

// Entry rule entryRuleEntityNamedFCExpression
entryRuleEntityNamedFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityNamedFCExpressionRule()); }
	iv_ruleEntityNamedFCExpression=ruleEntityNamedFCExpression
	{ $current=$iv_ruleEntityNamedFCExpression.current; }
	EOF;

// Rule EntityNamedFCExpression
ruleEntityNamedFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getEntityNamedFCExpressionAccess().getEntityOneOfFCExpressionParserRuleCall());
	}
	this_EntityOneOfFCExpression_0=ruleEntityOneOfFCExpression
	{
		$current = $this_EntityOneOfFCExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEntitySetCreateFCExpression
entryRuleEntitySetCreateFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntitySetCreateFCExpressionRule()); }
	iv_ruleEntitySetCreateFCExpression=ruleEntitySetCreateFCExpression
	{ $current=$iv_ruleEntitySetCreateFCExpression.current; }
	EOF;

// Rule EntitySetCreateFCExpression
ruleEntitySetCreateFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitySetCreateFCExpressionAccess().getFunctionEntitySetCreateFunctionParserRuleCall_0_0());
				}
				lv_function_0_0=ruleEntitySetCreateFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitySetCreateFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_0_0,
						"org.cirad.dsl.xtext.Breactive.EntitySetCreateFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitySetCreateFCExpressionAccess().getArgumentsDeclaredEntitiesParserRuleCall_1_0());
				}
				lv_arguments_1_0=ruleDeclaredEntities
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitySetCreateFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_1_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredEntities");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitySetCreateFCExpressionAccess().getArgumentsConstantExpressionParserRuleCall_2_0());
				}
				lv_arguments_2_0=ruleConstantExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitySetCreateFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_2_0,
						"org.cirad.dsl.xtext.Breactive.ConstantExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEntityOneOfFCExpression
entryRuleEntityOneOfFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityOneOfFCExpressionRule()); }
	iv_ruleEntityOneOfFCExpression=ruleEntityOneOfFCExpression
	{ $current=$iv_ruleEntityOneOfFCExpression.current; }
	EOF;

// Rule EntityOneOfFCExpression
ruleEntityOneOfFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityOneOfFCExpressionAccess().getFunctionEntityOneOfFunctionParserRuleCall_0_0());
				}
				lv_function_0_0=ruleEntityOneOfFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityOneOfFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_0_0,
						"org.cirad.dsl.xtext.Breactive.EntityOneOfFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getEntityOneOfFCExpressionAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityOneOfFCExpressionAccess().getArgumentsDeclaredEntitiesParserRuleCall_1_1_0());
					}
					lv_arguments_2_0=ruleDeclaredEntities
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityOneOfFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_0,
							"org.cirad.dsl.xtext.Breactive.DeclaredEntities");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3='from '
				{
					newLeafNode(otherlv_3, grammarAccess.getEntityOneOfFCExpressionAccess().getFromKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntityOneOfFCExpressionAccess().getArgumentsLocationNamedFCExpressionParserRuleCall_1_2_1_0());
						}
						lv_arguments_4_0=ruleLocationNamedFCExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntityOneOfFCExpressionRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_4_0,
								"org.cirad.dsl.xtext.Breactive.LocationNamedFCExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			otherlv_5='having '
			{
				newLeafNode(otherlv_5, grammarAccess.getEntityOneOfFCExpressionAccess().getHavingKeyword_2_0());
			}
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getEntityOneOfFCExpressionAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityOneOfFCExpressionAccess().getArgumentsBooleanLogicFCExpressionParserRuleCall_2_2_0());
					}
					lv_arguments_7_0=ruleBooleanLogicFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityOneOfFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_7_0,
							"org.cirad.dsl.xtext.Breactive.BooleanLogicFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getEntityOneOfFCExpressionAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntityOneOfFCExpressionAccess().getArgumentsBooleanLogicFCExpressionParserRuleCall_2_3_1_0());
						}
						lv_arguments_9_0=ruleBooleanLogicFCExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntityOneOfFCExpressionRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_9_0,
								"org.cirad.dsl.xtext.Breactive.BooleanLogicFCExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getEntityOneOfFCExpressionAccess().getRightParenthesisKeyword_2_4());
			}
		)?
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getEntityOneOfFCExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleEntitySetOnLocationFCExpression
entryRuleEntitySetOnLocationFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntitySetOnLocationFCExpressionRule()); }
	iv_ruleEntitySetOnLocationFCExpression=ruleEntitySetOnLocationFCExpression
	{ $current=$iv_ruleEntitySetOnLocationFCExpression.current; }
	EOF;

// Rule EntitySetOnLocationFCExpression
ruleEntitySetOnLocationFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitySetOnLocationFCExpressionAccess().getArgumentsDeclaredEntitiesParserRuleCall_0_0());
				}
				lv_arguments_0_0=ruleDeclaredEntities
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitySetOnLocationFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_0_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredEntities");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitySetOnLocationFCExpressionAccess().getFunctionEntitySetOnLocationFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleEntitySetOnLocationFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitySetOnLocationFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.cirad.dsl.xtext.Breactive.EntitySetOnLocationFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitySetOnLocationFCExpressionAccess().getArgumentsLocationPrimitiveFCExpressionParserRuleCall_2_0());
				}
				lv_arguments_2_0=ruleLocationPrimitiveFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitySetOnLocationFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_2_0,
						"org.cirad.dsl.xtext.Breactive.LocationPrimitiveFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEntitySetConditionalFCExpression
entryRuleEntitySetConditionalFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntitySetConditionalFCExpressionRule()); }
	iv_ruleEntitySetConditionalFCExpression=ruleEntitySetConditionalFCExpression
	{ $current=$iv_ruleEntitySetConditionalFCExpression.current; }
	EOF;

// Rule EntitySetConditionalFCExpression
ruleEntitySetConditionalFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitySetConditionalFCExpressionAccess().getFunctionEntityNamedFunctionParserRuleCall_0_0());
				}
				lv_function_0_0=ruleEntityNamedFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitySetConditionalFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_0_0,
						"org.cirad.dsl.xtext.Breactive.EntityNamedFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEntitySetConditionalFCExpressionAccess().getArgumentsDeclaredEntitiesParserRuleCall_1_0_0());
					}
					lv_arguments_1_0=ruleDeclaredEntities
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntitySetConditionalFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_1_0,
							"org.cirad.dsl.xtext.Breactive.DeclaredEntities");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEntitySetConditionalFCExpressionAccess().getArgumentsLocationPrimitiveFCExpressionParserRuleCall_1_1_0());
					}
					lv_arguments_2_0=ruleLocationPrimitiveFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntitySetConditionalFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_0,
							"org.cirad.dsl.xtext.Breactive.LocationPrimitiveFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_3='having '
			{
				newLeafNode(otherlv_3, grammarAccess.getEntitySetConditionalFCExpressionAccess().getHavingKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntitySetConditionalFCExpressionAccess().getArgumentsBooleanLogicFCExpressionParserRuleCall_2_1_0());
					}
					lv_arguments_4_0=ruleBooleanLogicFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntitySetConditionalFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_4_0,
							"org.cirad.dsl.xtext.Breactive.BooleanLogicFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNumericNamedFCExpression
entryRuleNumericNamedFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericNamedFCExpressionRule()); }
	iv_ruleNumericNamedFCExpression=ruleNumericNamedFCExpression
	{ $current=$iv_ruleNumericNamedFCExpression.current; }
	EOF;

// Rule NumericNamedFCExpression
ruleNumericNamedFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNumericNamedFCExpressionAccess().getArithmeticFCExpressionParserRuleCall_0());
		}
		this_ArithmeticFCExpression_0=ruleArithmeticFCExpression
		{
			$current = $this_ArithmeticFCExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumericNamedFCExpressionAccess().getMathFCExpressionParserRuleCall_1());
		}
		this_MathFCExpression_1=ruleMathFCExpression
		{
			$current = $this_MathFCExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumericNamedFCExpressionAccess().getCountFCExpressionParserRuleCall_2());
		}
		this_CountFCExpression_2=ruleCountFCExpression
		{
			$current = $this_CountFCExpression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArithmeticFCExpression
entryRuleArithmeticFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticFCExpressionRule()); }
	iv_ruleArithmeticFCExpression=ruleArithmeticFCExpression
	{ $current=$iv_ruleArithmeticFCExpression.current; }
	EOF;

// Rule ArithmeticFCExpression
ruleArithmeticFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='-'
			{
				newLeafNode(otherlv_0, grammarAccess.getArithmeticFCExpressionAccess().getHyphenMinusKeyword_0());
			}
		)?
		{
			newCompositeNode(grammarAccess.getArithmeticFCExpressionAccess().getAdditionParserRuleCall_1());
		}
		this_Addition_1=ruleAddition
		{
			$current = $this_Addition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAddition
entryRuleAddition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditionRule()); }
	iv_ruleAddition=ruleAddition
	{ $current=$iv_ruleAddition.current; }
	EOF;

// Rule Addition
ruleAddition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
		}
		this_Multiplication_0=ruleMultiplication
		{
			$current = $this_Multiplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getAdditionAccess().getFunctionCallExpressionArgumentsAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getFunctionArithmeticFunctionPlusParserRuleCall_1_1_0());
					}
					lv_function_2_0=ruleArithmeticFunctionPlus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"function",
							lv_function_2_0,
							"org.cirad.dsl.xtext.Breactive.ArithmeticFunctionPlus");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getArgumentsMultiplicationParserRuleCall_1_2_0());
					}
					lv_arguments_3_0=ruleMultiplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_3_0,
							"org.cirad.dsl.xtext.Breactive.Multiplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplication
entryRuleMultiplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicationRule()); }
	iv_ruleMultiplication=ruleMultiplication
	{ $current=$iv_ruleMultiplication.current; }
	EOF;

// Rule Multiplication
ruleMultiplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationAccess().getPrimaryArithmeticExpressionParserRuleCall_0());
		}
		this_PrimaryArithmeticExpression_0=rulePrimaryArithmeticExpression
		{
			$current = $this_PrimaryArithmeticExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getMultiplicationAccess().getFunctionCallExpressionArgumentsAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getFunctionArithmeticFunctionMultiplicationParserRuleCall_1_1_0());
					}
					lv_function_2_0=ruleArithmeticFunctionMultiplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"function",
							lv_function_2_0,
							"org.cirad.dsl.xtext.Breactive.ArithmeticFunctionMultiplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getArgumentsPrimaryArithmeticExpressionParserRuleCall_1_2_0());
					}
					lv_arguments_3_0=rulePrimaryArithmeticExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_3_0,
							"org.cirad.dsl.xtext.Breactive.PrimaryArithmeticExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimaryArithmeticExpression
entryRulePrimaryArithmeticExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryArithmeticExpressionRule()); }
	iv_rulePrimaryArithmeticExpression=rulePrimaryArithmeticExpression
	{ $current=$iv_rulePrimaryArithmeticExpression.current; }
	EOF;

// Rule PrimaryArithmeticExpression
rulePrimaryArithmeticExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryArithmeticExpressionAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryArithmeticExpressionAccess().getNumericNamedFCExpressionParserRuleCall_0_1());
			}
			this_NumericNamedFCExpression_1=ruleNumericNamedFCExpression
			{
				$current = $this_NumericNamedFCExpression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryArithmeticExpressionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimaryArithmeticExpressionAccess().getArgumentsDeclaredVariableParserRuleCall_1_0());
				}
				lv_arguments_3_0=ruleDeclaredVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryArithmeticExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_3_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimaryArithmeticExpressionAccess().getArgumentsConstantExpressionParserRuleCall_2_0());
				}
				lv_arguments_4_0=ruleConstantExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryArithmeticExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_4_0,
						"org.cirad.dsl.xtext.Breactive.ConstantExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantExpressionRule()); }
	iv_ruleConstantExpression=ruleConstantExpression
	{ $current=$iv_ruleConstantExpression.current; }
	EOF;

// Rule ConstantExpression
ruleConstantExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstantExpressionAccess().getConstantExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantExpressionAccess().getValueFloatParserRuleCall_1_0());
				}
				lv_value_1_0=ruleFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstantExpressionRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.cirad.dsl.xtext.Breactive.Float");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCountFCExpression
entryRuleCountFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountFCExpressionRule()); }
	iv_ruleCountFCExpression=ruleCountFCExpression
	{ $current=$iv_ruleCountFCExpression.current; }
	EOF;

// Rule CountFCExpression
ruleCountFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCountFCExpressionAccess().getCountVariableFCExpressionParserRuleCall_0());
		}
		this_CountVariableFCExpression_0=ruleCountVariableFCExpression
		{
			$current = $this_CountVariableFCExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCountFCExpressionAccess().getCountEntityFCExpressionParserRuleCall_1());
		}
		this_CountEntityFCExpression_1=ruleCountEntityFCExpression
		{
			$current = $this_CountEntityFCExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCountVariableFCExpression
entryRuleCountVariableFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountVariableFCExpressionRule()); }
	iv_ruleCountVariableFCExpression=ruleCountVariableFCExpression
	{ $current=$iv_ruleCountVariableFCExpression.current; }
	EOF;

// Rule CountVariableFCExpression
ruleCountVariableFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCountVariableFCExpressionAccess().getFunctionCountFunctionParserRuleCall_0_0());
				}
				lv_function_0_0=ruleCountFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountVariableFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_0_0,
						"org.cirad.dsl.xtext.Breactive.CountFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCountVariableFCExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCountVariableFCExpressionAccess().getArgumentsDeclaredVariableParserRuleCall_2_0());
				}
				lv_arguments_2_0=ruleDeclaredVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountVariableFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_2_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCountVariableFCExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleCountEntityFCExpression
entryRuleCountEntityFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountEntityFCExpressionRule()); }
	iv_ruleCountEntityFCExpression=ruleCountEntityFCExpression
	{ $current=$iv_ruleCountEntityFCExpression.current; }
	EOF;

// Rule CountEntityFCExpression
ruleCountEntityFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCountEntityFCExpressionAccess().getFunctionCountFunctionParserRuleCall_0_0());
				}
				lv_function_0_0=ruleCountFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountEntityFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_0_0,
						"org.cirad.dsl.xtext.Breactive.CountFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCountEntityFCExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCountEntityFCExpressionAccess().getArgumentsEntitySetConditionalFCExpressionParserRuleCall_2_0());
				}
				lv_arguments_2_0=ruleEntitySetConditionalFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountEntityFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_2_0,
						"org.cirad.dsl.xtext.Breactive.EntitySetConditionalFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCountEntityFCExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleMathFCExpression
entryRuleMathFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMathFCExpressionRule()); }
	iv_ruleMathFCExpression=ruleMathFCExpression
	{ $current=$iv_ruleMathFCExpression.current; }
	EOF;

// Rule MathFCExpression
ruleMathFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMathFCExpressionAccess().getFunctionMathFunctionParserRuleCall_0_0());
				}
				lv_function_0_0=ruleMathFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMathFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_0_0,
						"org.cirad.dsl.xtext.Breactive.MathFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMathFCExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMathFCExpressionAccess().getArgumentsNumericNamedFCExpressionParserRuleCall_2_0());
				}
				lv_arguments_2_0=ruleNumericNamedFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMathFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_2_0,
						"org.cirad.dsl.xtext.Breactive.NumericNamedFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getMathFCExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleGetNamedFCExpression
entryRuleGetNamedFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetNamedFCExpressionRule()); }
	iv_ruleGetNamedFCExpression=ruleGetNamedFCExpression
	{ $current=$iv_ruleGetNamedFCExpression.current; }
	EOF;

// Rule GetNamedFCExpression
ruleGetNamedFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getGetNamedFCExpressionAccess().getGetAttributeFromEntityFCExpressionParserRuleCall());
	}
	this_GetAttributeFromEntityFCExpression_0=ruleGetAttributeFromEntityFCExpression
	{
		$current = $this_GetAttributeFromEntityFCExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleGetAttributeFromEntityFCExpression
entryRuleGetAttributeFromEntityFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetAttributeFromEntityFCExpressionRule()); }
	iv_ruleGetAttributeFromEntityFCExpression=ruleGetAttributeFromEntityFCExpression
	{ $current=$iv_ruleGetAttributeFromEntityFCExpression.current; }
	EOF;

// Rule GetAttributeFromEntityFCExpression
ruleGetAttributeFromEntityFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGetAttributeFromEntityFCExpressionAccess().getArgumentsDeclaredVariableParserRuleCall_0_0());
				}
				lv_arguments_0_0=ruleDeclaredVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGetAttributeFromEntityFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_0_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGetAttributeFromEntityFCExpressionAccess().getFunctionGetVariableFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleGetVariableFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGetAttributeFromEntityFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.cirad.dsl.xtext.Breactive.GetVariableFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getGetAttributeFromEntityFCExpressionAccess().getArgumentsEntityNamedFCExpressionParserRuleCall_2_0_0());
					}
					lv_arguments_2_1=ruleEntityNamedFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGetAttributeFromEntityFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_1,
							"org.cirad.dsl.xtext.Breactive.EntityNamedFCExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getGetAttributeFromEntityFCExpressionAccess().getArgumentsDeclaredEntitiesParserRuleCall_2_0_1());
					}
					lv_arguments_2_2=ruleDeclaredEntities
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGetAttributeFromEntityFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_2,
							"org.cirad.dsl.xtext.Breactive.DeclaredEntities");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_3='from '
			{
				newLeafNode(otherlv_3, grammarAccess.getGetAttributeFromEntityFCExpressionAccess().getFromKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGetAttributeFromEntityFCExpressionAccess().getArgumentsLocationNamedFCExpressionParserRuleCall_3_1_0());
					}
					lv_arguments_4_0=ruleLocationNamedFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGetAttributeFromEntityFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_4_0,
							"org.cirad.dsl.xtext.Breactive.LocationNamedFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMaxOneOfLocationFCExpression
entryRuleMaxOneOfLocationFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaxOneOfLocationFCExpressionRule()); }
	iv_ruleMaxOneOfLocationFCExpression=ruleMaxOneOfLocationFCExpression
	{ $current=$iv_ruleMaxOneOfLocationFCExpression.current; }
	EOF;

// Rule MaxOneOfLocationFCExpression
ruleMaxOneOfLocationFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMaxOneOfLocationFCExpressionAccess().getFunctionCallExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMaxOneOfLocationFCExpressionAccess().getFunctionMaxOneOfLocationFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleMaxOneOfLocationFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaxOneOfLocationFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.cirad.dsl.xtext.Breactive.MaxOneOfLocationFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getMaxOneOfLocationFCExpressionAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaxOneOfLocationFCExpressionAccess().getArgumentsDeclaredAttributesParserRuleCall_2_1_0());
					}
					lv_arguments_3_0=ruleDeclaredAttributes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaxOneOfLocationFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_3_0,
							"org.cirad.dsl.xtext.Breactive.DeclaredAttributes");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getMaxOneOfLocationFCExpressionAccess().getCommaKeyword_2_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMaxOneOfLocationFCExpressionAccess().getArgumentsSelectConditionalLocationFCExpressionParserRuleCall_2_3_0_0());
						}
						lv_arguments_5_1=ruleSelectConditionalLocationFCExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMaxOneOfLocationFCExpressionRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_5_1,
								"org.cirad.dsl.xtext.Breactive.SelectConditionalLocationFCExpression");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getMaxOneOfLocationFCExpressionAccess().getArgumentsUnionLocationFCExpressionParserRuleCall_2_3_0_1());
						}
						lv_arguments_5_2=ruleUnionLocationFCExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMaxOneOfLocationFCExpressionRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_5_2,
								"org.cirad.dsl.xtext.Breactive.UnionLocationFCExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMaxOneOfLocationFCExpressionAccess().getArgumentsUnionLocationFCExpressionParserRuleCall_2_4_0());
					}
					lv_arguments_6_0=ruleUnionLocationFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaxOneOfLocationFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_6_0,
							"org.cirad.dsl.xtext.Breactive.UnionLocationFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getMaxOneOfLocationFCExpressionAccess().getRightSquareBracketKeyword_2_5());
			}
		)
	)
;

// Entry rule entryRuleOneOfLocationFCExpression
entryRuleOneOfLocationFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOneOfLocationFCExpressionRule()); }
	iv_ruleOneOfLocationFCExpression=ruleOneOfLocationFCExpression
	{ $current=$iv_ruleOneOfLocationFCExpression.current; }
	EOF;

// Rule OneOfLocationFCExpression
ruleOneOfLocationFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOneOfLocationFCExpressionAccess().getFunctionCallExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOneOfLocationFCExpressionAccess().getFunctionOneOfLocationFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleOneOfLocationFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOneOfLocationFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.cirad.dsl.xtext.Breactive.OneOfLocationFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getOneOfLocationFCExpressionAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOneOfLocationFCExpressionAccess().getArgumentsSelectConditionalLocationFCExpressionParserRuleCall_2_1_0());
					}
					lv_arguments_3_0=ruleSelectConditionalLocationFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOneOfLocationFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_3_0,
							"org.cirad.dsl.xtext.Breactive.SelectConditionalLocationFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getOneOfLocationFCExpressionAccess().getArgumentsLocationSetNamedFCExpressionParserRuleCall_2_2_0());
					}
					lv_arguments_4_0=ruleLocationSetNamedFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOneOfLocationFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_4_0,
							"org.cirad.dsl.xtext.Breactive.LocationSetNamedFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getOneOfLocationFCExpressionAccess().getArgumentsDeclaredLocalVariableParserRuleCall_2_3_0());
					}
					lv_arguments_5_0=ruleDeclaredLocalVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOneOfLocationFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_5_0,
							"org.cirad.dsl.xtext.Breactive.DeclaredLocalVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getOneOfLocationFCExpressionAccess().getRightSquareBracketKeyword_2_4());
			}
		)
	)
;

// Entry rule entryRuleSelectConditionalLocationFCExpression
entryRuleSelectConditionalLocationFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectConditionalLocationFCExpressionRule()); }
	iv_ruleSelectConditionalLocationFCExpression=ruleSelectConditionalLocationFCExpression
	{ $current=$iv_ruleSelectConditionalLocationFCExpression.current; }
	EOF;

// Rule SelectConditionalLocationFCExpression
ruleSelectConditionalLocationFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSelectConditionalLocationFCExpressionAccess().getFunctionCallExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectConditionalLocationFCExpressionAccess().getFunctionSelectConditionalLocationFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleSelectConditionalLocationFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectConditionalLocationFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.cirad.dsl.xtext.Breactive.SelectConditionalLocationFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='from ['
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectConditionalLocationFCExpressionAccess().getFromKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectConditionalLocationFCExpressionAccess().getArgumentsLocationPrimitiveFCExpressionParserRuleCall_3_0());
				}
				lv_arguments_3_0=ruleLocationPrimitiveFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectConditionalLocationFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_3_0,
						"org.cirad.dsl.xtext.Breactive.LocationPrimitiveFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getSelectConditionalLocationFCExpressionAccess().getRightSquareBracketKeyword_4());
		}
		otherlv_5='such that'
		{
			newLeafNode(otherlv_5, grammarAccess.getSelectConditionalLocationFCExpressionAccess().getSuchThatKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectConditionalLocationFCExpressionAccess().getArgumentsBooleanLogicFCExpressionParserRuleCall_6_0());
				}
				lv_arguments_6_0=ruleBooleanLogicFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectConditionalLocationFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_6_0,
						"org.cirad.dsl.xtext.Breactive.BooleanLogicFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLocationPrimitiveFCExpression
entryRuleLocationPrimitiveFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationPrimitiveFCExpressionRule()); }
	iv_ruleLocationPrimitiveFCExpression=ruleLocationPrimitiveFCExpression
	{ $current=$iv_ruleLocationPrimitiveFCExpression.current; }
	EOF;

// Rule LocationPrimitiveFCExpression
ruleLocationPrimitiveFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLocationPrimitiveFCExpressionAccess().getFunctionCallExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLocationPrimitiveFCExpressionAccess().getFunctionLocationPrimitiveFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleLocationPrimitiveFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocationPrimitiveFCExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.cirad.dsl.xtext.Breactive.LocationPrimitiveFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSetAttributeNamedFCExpression
entryRuleSetAttributeNamedFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetAttributeNamedFCExpressionRule()); }
	iv_ruleSetAttributeNamedFCExpression=ruleSetAttributeNamedFCExpression
	{ $current=$iv_ruleSetAttributeNamedFCExpression.current; }
	EOF;

// Rule SetAttributeNamedFCExpression
ruleSetAttributeNamedFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSetAttributeNamedFCExpressionAccess().getArgumentsDeclaredAttributesParserRuleCall_0_0());
				}
				lv_arguments_0_0=ruleDeclaredAttributes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetAttributeNamedFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_0_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredAttributes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSetAttributeNamedFCExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSetAttributeNamedFCExpressionAccess().getArgumentsConstantExpressionParserRuleCall_2_0_0());
					}
					lv_arguments_2_0=ruleConstantExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetAttributeNamedFCExpressionRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_0,
							"org.cirad.dsl.xtext.Breactive.ConstantExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			this_STRING_3=RULE_STRING
			{
				newLeafNode(this_STRING_3, grammarAccess.getSetAttributeNamedFCExpressionAccess().getSTRINGTerminalRuleCall_2_1());
			}
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getSetAttributeNamedFCExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSetLocationNamedFCExpression
entryRuleSetLocationNamedFCExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetLocationNamedFCExpressionRule()); }
	iv_ruleSetLocationNamedFCExpression=ruleSetLocationNamedFCExpression
	{ $current=$iv_ruleSetLocationNamedFCExpression.current; }
	EOF;

// Rule SetLocationNamedFCExpression
ruleSetLocationNamedFCExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSetLocationNamedFCExpressionAccess().getArgumentsDeclaredAttributesParserRuleCall_0_0());
				}
				lv_arguments_0_0=ruleDeclaredAttributes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetLocationNamedFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_0_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredAttributes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSetLocationNamedFCExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetLocationNamedFCExpressionAccess().getArgumentsLocationNamedFCExpressionParserRuleCall_2_0());
				}
				lv_arguments_2_0=ruleLocationNamedFCExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetLocationNamedFCExpressionRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_2_0,
						"org.cirad.dsl.xtext.Breactive.LocationNamedFCExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSetLocationNamedFCExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleDeclaredLocalVariable
entryRuleDeclaredLocalVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclaredLocalVariableRule()); }
	iv_ruleDeclaredLocalVariable=ruleDeclaredLocalVariable
	{ $current=$iv_ruleDeclaredLocalVariable.current; }
	EOF;

// Rule DeclaredLocalVariable
ruleDeclaredLocalVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeclaredLocalVariableAccess().getDeclaredLocalVariableAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclaredLocalVariableRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDeclaredLocalVariableAccess().getLocalvariableLocalVariableCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDeclaredAttributes
entryRuleDeclaredAttributes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclaredAttributesRule()); }
	iv_ruleDeclaredAttributes=ruleDeclaredAttributes
	{ $current=$iv_ruleDeclaredAttributes.current; }
	EOF;

// Rule DeclaredAttributes
ruleDeclaredAttributes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDeclaredAttributesRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getDeclaredAttributesAccess().getAttributeclassAttributeClassCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDeclaredParameter
entryRuleDeclaredParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclaredParameterRule()); }
	iv_ruleDeclaredParameter=ruleDeclaredParameter
	{ $current=$iv_ruleDeclaredParameter.current; }
	EOF;

// Rule DeclaredParameter
ruleDeclaredParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeclaredParameterAccess().getDeclaredParameterAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclaredParameterRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDeclaredParameterAccess().getParameterclassParameterClassCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeclaredVariable
entryRuleDeclaredVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclaredVariableRule()); }
	iv_ruleDeclaredVariable=ruleDeclaredVariable
	{ $current=$iv_ruleDeclaredVariable.current; }
	EOF;

// Rule DeclaredVariable
ruleDeclaredVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeclaredVariableAccess().getDeclaredVariableAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclaredVariableRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDeclaredVariableAccess().getVariableclassVariableClassCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeclaredEntities
entryRuleDeclaredEntities returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclaredEntitiesRule()); }
	iv_ruleDeclaredEntities=ruleDeclaredEntities
	{ $current=$iv_ruleDeclaredEntities.current; }
	EOF;

// Rule DeclaredEntities
ruleDeclaredEntities returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDeclaredEntitiesRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getDeclaredEntitiesAccess().getEntityEntityCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFloat
entryRuleFloat returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFloatRule()); }
	iv_ruleFloat=ruleFloat
	{ $current=$iv_ruleFloat.current.getText(); }
	EOF;

// Rule Float
ruleFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getFloatAccess().getINTTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFloatAccess().getFullStopKeyword_1_0());
			}
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getFloatAccess().getINTTerminalRuleCall_1_1());
			}
		)?
	)
;

// Entry rule entryRuleStart
entryRuleStart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartRule()); }
	iv_ruleStart=ruleStart
	{ $current=$iv_ruleStart.current; }
	EOF;

// Rule Start
ruleStart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStartAccess().getStartAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='Start'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStartAccess().getNameStartKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStartRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "Start");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStartAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_2_0());
				}
				lv_outcome_edge_2_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_2_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnd
entryRuleEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndRule()); }
	iv_ruleEnd=ruleEnd
	{ $current=$iv_ruleEnd.current; }
	EOF;

// Rule End
ruleEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEndAccess().getEndAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='End'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEndAccess().getNameEndKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEndRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "End");
				}
			)
		)
	)
;

// Entry rule entryRuleDeclaredBehavior
entryRuleDeclaredBehavior returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclaredBehaviorRule()); }
	iv_ruleDeclaredBehavior=ruleDeclaredBehavior
	{ $current=$iv_ruleDeclaredBehavior.current; }
	EOF;

// Rule DeclaredBehavior
ruleDeclaredBehavior returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclaredBehaviorRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDeclaredBehaviorAccess().getBehaviorBehaviorCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclaredBehaviorAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_1_0());
				}
				lv_outcome_edge_1_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclaredBehaviorRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_1_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUnconditionedEdge
entryRuleUnconditionedEdge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnconditionedEdgeRule()); }
	iv_ruleUnconditionedEdge=ruleUnconditionedEdge
	{ $current=$iv_ruleUnconditionedEdge.current; }
	EOF;

// Rule UnconditionedEdge
ruleUnconditionedEdge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnconditionedEdgeAccess().getUnconditionedEdgeAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='->'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUnconditionedEdgeAccess().getNameHyphenMinusGreaterThanSignKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnconditionedEdgeRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "->");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getUnconditionedEdgeAccess().getTarget_nodeDeclaredBehaviorParserRuleCall_2_0_0());
					}
					lv_target_node_2_0=ruleDeclaredBehavior
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnconditionedEdgeRule());
						}
						add(
							$current,
							"target_node",
							lv_target_node_2_0,
							"org.cirad.dsl.xtext.Breactive.DeclaredBehavior");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getUnconditionedEdgeAccess().getTarget_nodeEndParserRuleCall_2_1_0());
					}
					lv_target_node_3_0=ruleEnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnconditionedEdgeRule());
						}
						add(
							$current,
							"target_node",
							lv_target_node_3_0,
							"org.cirad.dsl.xtext.Breactive.End");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getUnconditionedEdgeAccess().getTarget_nodeDecisionParserRuleCall_2_2_0());
					}
					lv_target_node_4_0=ruleDecision
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnconditionedEdgeRule());
						}
						add(
							$current,
							"target_node",
							lv_target_node_4_0,
							"org.cirad.dsl.xtext.Breactive.Decision");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getUnconditionedEdgeAccess().getTarget_nodeForkParserRuleCall_2_3_0());
					}
					lv_target_node_5_0=ruleFork
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnconditionedEdgeRule());
						}
						add(
							$current,
							"target_node",
							lv_target_node_5_0,
							"org.cirad.dsl.xtext.Breactive.Fork");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getUnconditionedEdgeAccess().getTarget_nodeMergeParserRuleCall_2_4_0());
					}
					lv_target_node_6_0=ruleMerge
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnconditionedEdgeRule());
						}
						add(
							$current,
							"target_node",
							lv_target_node_6_0,
							"org.cirad.dsl.xtext.Breactive.Merge");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getUnconditionedEdgeAccess().getTarget_nodeJoinParserRuleCall_2_5_0());
					}
					lv_target_node_7_0=ruleJoin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnconditionedEdgeRule());
						}
						add(
							$current,
							"target_node",
							lv_target_node_7_0,
							"org.cirad.dsl.xtext.Breactive.Join");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getUnconditionedEdgeAccess().getTarget_nodePrimitiveActivitiesParserRuleCall_2_6_0());
					}
					lv_target_node_8_0=rulePrimitiveActivities
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnconditionedEdgeRule());
						}
						add(
							$current,
							"target_node",
							lv_target_node_8_0,
							"org.cirad.dsl.xtext.Breactive.PrimitiveActivities");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTrueEdge
entryRuleTrueEdge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrueEdgeRule()); }
	iv_ruleTrueEdge=ruleTrueEdge
	{ $current=$iv_ruleTrueEdge.current; }
	EOF;

// Rule TrueEdge
ruleTrueEdge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTrueEdgeAccess().getIfTrueEdgeAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='then'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTrueEdgeAccess().getNameThenKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTrueEdgeRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "then");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTrueEdgeAccess().getTarget_nodeNodeParserRuleCall_2_0());
				}
				lv_target_node_2_0=ruleNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTrueEdgeRule());
					}
					add(
						$current,
						"target_node",
						lv_target_node_2_0,
						"org.cirad.dsl.xtext.Breactive.Node");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFalseEdge
entryRuleFalseEdge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFalseEdgeRule()); }
	iv_ruleFalseEdge=ruleFalseEdge
	{ $current=$iv_ruleFalseEdge.current; }
	EOF;

// Rule FalseEdge
ruleFalseEdge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFalseEdgeAccess().getIfFalseEdgeAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='else'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFalseEdgeAccess().getNameElseKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFalseEdgeRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "else");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFalseEdgeAccess().getTarget_nodeNodeParserRuleCall_2_0());
				}
				lv_target_node_2_0=ruleNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFalseEdgeRule());
					}
					add(
						$current,
						"target_node",
						lv_target_node_2_0,
						"org.cirad.dsl.xtext.Breactive.Node");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDecision
entryRuleDecision returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDecisionRule()); }
	iv_ruleDecision=ruleDecision
	{ $current=$iv_ruleDecision.current; }
	EOF;

// Rule Decision
ruleDecision returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDecisionAccess().getDecisionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='Decide '
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDecisionAccess().getNameDecideKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDecisionRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "Decide ");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDecisionAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='if'
		{
			newLeafNode(otherlv_3, grammarAccess.getDecisionAccess().getIfKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getDecisionAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDecisionAccess().getBooleanexpressionBooleanNamedFCExpressionParserRuleCall_5_0_0());
					}
					lv_booleanexpression_5_0=ruleBooleanNamedFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecisionRule());
						}
						add(
							$current,
							"booleanexpression",
							lv_booleanexpression_5_0,
							"org.cirad.dsl.xtext.Breactive.BooleanNamedFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDecisionAccess().getBooleanexpressionBooleanLogicFCExpressionParserRuleCall_5_1_0());
					}
					lv_booleanexpression_6_0=ruleBooleanLogicFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecisionRule());
						}
						add(
							$current,
							"booleanexpression",
							lv_booleanexpression_6_0,
							"org.cirad.dsl.xtext.Breactive.BooleanLogicFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getDecisionAccess().getRightParenthesisKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDecisionAccess().getOutcome_edgeTrueEdgeParserRuleCall_7_0_0());
					}
					lv_outcome_edge_8_0=ruleTrueEdge
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecisionRule());
						}
						add(
							$current,
							"outcome_edge",
							lv_outcome_edge_8_0,
							"org.cirad.dsl.xtext.Breactive.TrueEdge");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDecisionAccess().getOutcome_edgeFalseEdgeParserRuleCall_7_1_0());
					}
					lv_outcome_edge_9_0=ruleFalseEdge
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDecisionRule());
						}
						add(
							$current,
							"outcome_edge",
							lv_outcome_edge_9_0,
							"org.cirad.dsl.xtext.Breactive.FalseEdge");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getDecisionAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleJoin
entryRuleJoin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJoinRule()); }
	iv_ruleJoin=ruleJoin
	{ $current=$iv_ruleJoin.current; }
	EOF;

// Rule Join
ruleJoin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getJoinAccess().getJoinAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='Join with ('
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJoinAccess().getNameJoinWithKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJoinRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "Join with (");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getJoinAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_2_0());
				}
				lv_outcome_edge_2_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJoinRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_2_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getJoinAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJoinAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_3_1_0());
					}
					lv_outcome_edge_4_0=ruleUnconditionedEdge
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJoinRule());
						}
						add(
							$current,
							"outcome_edge",
							lv_outcome_edge_4_0,
							"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getJoinAccess().getRightParenthesisKeyword_4());
		}
		otherlv_6='and goes to'
		{
			newLeafNode(otherlv_6, grammarAccess.getJoinAccess().getAndGoesToKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJoinAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_6_0());
				}
				lv_outcome_edge_7_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJoinRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_7_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFork
entryRuleFork returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForkRule()); }
	iv_ruleFork=ruleFork
	{ $current=$iv_ruleFork.current; }
	EOF;

// Rule Fork
ruleFork returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getForkAccess().getForkAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='Fork into ('
				{
					newLeafNode(lv_name_1_0, grammarAccess.getForkAccess().getNameForkIntoKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForkRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "Fork into (");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getForkAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_2_0());
				}
				lv_outcome_edge_2_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForkRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_2_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getForkAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForkAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_3_1_0());
					}
					lv_outcome_edge_4_0=ruleUnconditionedEdge
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForkRule());
						}
						add(
							$current,
							"outcome_edge",
							lv_outcome_edge_4_0,
							"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getForkAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleMerge
entryRuleMerge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMergeRule()); }
	iv_ruleMerge=ruleMerge
	{ $current=$iv_ruleMerge.current; }
	EOF;

// Rule Merge
ruleMerge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMergeAccess().getMergeAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='Merge with ('
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMergeAccess().getNameMergeWithKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMergeRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "Merge with (");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMergeAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_2_0());
				}
				lv_outcome_edge_2_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMergeRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_2_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getMergeAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMergeAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_3_1_0());
					}
					lv_outcome_edge_4_0=ruleUnconditionedEdge
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMergeRule());
						}
						add(
							$current,
							"outcome_edge",
							lv_outcome_edge_4_0,
							"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getMergeAccess().getRightParenthesisKeyword_4());
		}
		otherlv_6='and goes to'
		{
			newLeafNode(otherlv_6, grammarAccess.getMergeAccess().getAndGoesToKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMergeAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_6_0());
				}
				lv_outcome_edge_7_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMergeRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_7_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMove
entryRuleMove returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoveRule()); }
	iv_ruleMove=ruleMove
	{ $current=$iv_ruleMove.current; }
	EOF;

// Rule Move
ruleMove returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMoveAccess().getMoveAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='Move to '
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMoveAccess().getNameMoveToKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "Move to ");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMoveAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMoveAccess().getLocationexpressionDeclaredLocalVariableParserRuleCall_3_0_0());
					}
					lv_locationexpression_3_0=ruleDeclaredLocalVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMoveRule());
						}
						set(
							$current,
							"locationexpression",
							lv_locationexpression_3_0,
							"org.cirad.dsl.xtext.Breactive.DeclaredLocalVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getMoveAccess().getLocationexpressionLocationNamedFCExpressionParserRuleCall_3_1_0());
					}
					lv_locationexpression_4_0=ruleLocationNamedFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMoveRule());
						}
						set(
							$current,
							"locationexpression",
							lv_locationexpression_4_0,
							"org.cirad.dsl.xtext.Breactive.LocationNamedFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMoveAccess().getRightCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMoveAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_5_0());
				}
				lv_outcome_edge_6_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMoveRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_6_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDie
entryRuleDie returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDieRule()); }
	iv_ruleDie=ruleDie
	{ $current=$iv_ruleDie.current; }
	EOF;

// Rule Die
ruleDie returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDieAccess().getDieAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='Die'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDieAccess().getNameDieKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDieRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "Die");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDieAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_2_0());
				}
				lv_outcome_edge_2_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDieRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_2_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleReproduce
entryRuleReproduce returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReproduceRule()); }
	iv_ruleReproduce=ruleReproduce
	{ $current=$iv_ruleReproduce.current; }
	EOF;

// Rule Reproduce
ruleReproduce returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReproduceAccess().getReproduceAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='Reproduce'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReproduceAccess().getNameReproduceKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReproduceRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "Reproduce");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getReproduceAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReproduceAccess().getOffspring_quantityConstantExpressionParserRuleCall_3_0());
				}
				lv_offspring_quantity_3_0=ruleConstantExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReproduceRule());
					}
					set(
						$current,
						"offspring_quantity",
						lv_offspring_quantity_3_0,
						"org.cirad.dsl.xtext.Breactive.ConstantExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getReproduceAccess().getRightParenthesisKeyword_4());
		}
		(
			otherlv_5='with '
			{
				newLeafNode(otherlv_5, grammarAccess.getReproduceAccess().getWithKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReproduceAccess().getDeclaredattributesSetAttributeNamedFCExpressionParserRuleCall_5_1_0());
					}
					lv_declaredattributes_6_0=ruleSetAttributeNamedFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReproduceRule());
						}
						add(
							$current,
							"declaredattributes",
							lv_declaredattributes_6_0,
							"org.cirad.dsl.xtext.Breactive.SetAttributeNamedFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getReproduceAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getReproduceAccess().getDeclaredattributesSetAttributeNamedFCExpressionParserRuleCall_5_2_1_0());
						}
						lv_declaredattributes_8_0=ruleSetAttributeNamedFCExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReproduceRule());
							}
							add(
								$current,
								"declaredattributes",
								lv_declaredattributes_8_0,
								"org.cirad.dsl.xtext.Breactive.SetAttributeNamedFCExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			otherlv_9='placed on'
			{
				newLeafNode(otherlv_9, grammarAccess.getReproduceAccess().getPlacedOnKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReproduceAccess().getInitial_locationLocationNamedFCExpressionParserRuleCall_6_1_0());
					}
					lv_initial_location_10_0=ruleLocationNamedFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReproduceRule());
						}
						set(
							$current,
							"initial_location",
							lv_initial_location_10_0,
							"org.cirad.dsl.xtext.Breactive.LocationNamedFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_11='where'
			{
				newLeafNode(otherlv_11, grammarAccess.getReproduceAccess().getWhereKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getReproduceAccess().getOccupiedExpressionBooleanIsOccuppiedLocationFCExpressionParserRuleCall_7_1_0());
					}
					lv_occupiedExpression_12_0=ruleBooleanIsOccuppiedLocationFCExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReproduceRule());
						}
						add(
							$current,
							"occupiedExpression",
							lv_occupiedExpression_12_0,
							"org.cirad.dsl.xtext.Breactive.BooleanIsOccuppiedLocationFCExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getReproduceAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_8_0());
				}
				lv_outcome_edge_13_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReproduceRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_13_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	iv_ruleAdd=ruleAdd
	{ $current=$iv_ruleAdd.current; }
	EOF;

// Rule Add
ruleAdd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAddAccess().getAddAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_name_1_0='Add'
					{
						newLeafNode(lv_name_1_0, grammarAccess.getAddAccess().getNameAddKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAddRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_0, "Add");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAddAccess().getExpressionFunctionCallExpressionParserRuleCall_1_1_0());
					}
					lv_expression_2_0=ruleFunctionCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddRule());
						}
						add(
							$current,
							"expression",
							lv_expression_2_0,
							"org.cirad.dsl.xtext.Breactive.FunctionCallExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='to'
			{
				newLeafNode(otherlv_3, grammarAccess.getAddAccess().getToKeyword_1_2());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getToAttributeDeclaredAttributesParserRuleCall_2_0());
				}
				lv_toAttribute_4_0=ruleDeclaredAttributes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"toAttribute",
						lv_toAttribute_4_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredAttributes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_3_0());
				}
				lv_outcome_edge_5_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_5_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleRemove
entryRuleRemove returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveRule()); }
	iv_ruleRemove=ruleRemove
	{ $current=$iv_ruleRemove.current; }
	EOF;

// Rule Remove
ruleRemove returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRemoveAccess().getRemoveAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_name_1_0='Remove'
					{
						newLeafNode(lv_name_1_0, grammarAccess.getRemoveAccess().getNameRemoveKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRemoveRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_0, "Remove");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRemoveAccess().getExpressionFunctionCallExpressionParserRuleCall_1_1_0());
					}
					lv_expression_2_0=ruleFunctionCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRemoveRule());
						}
						add(
							$current,
							"expression",
							lv_expression_2_0,
							"org.cirad.dsl.xtext.Breactive.FunctionCallExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='from '
			{
				newLeafNode(otherlv_3, grammarAccess.getRemoveAccess().getFromKeyword_1_2());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveAccess().getFromDeclaredAttributesParserRuleCall_2_0());
				}
				lv_from_4_0=ruleDeclaredAttributes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveRule());
					}
					set(
						$current,
						"from",
						lv_from_4_0,
						"org.cirad.dsl.xtext.Breactive.DeclaredAttributes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_3_0());
				}
				lv_outcome_edge_5_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_5_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSet
entryRuleSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetRule()); }
	iv_ruleSet=ruleSet
	{ $current=$iv_ruleSet.current; }
	EOF;

// Rule Set
ruleSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSetAccess().getSetVariableAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_name_1_0='Set'
					{
						newLeafNode(lv_name_1_0, grammarAccess.getSetAccess().getNameSetKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSetRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_0, "Set");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSetAccess().getAssignmentAssignmentParserRuleCall_1_1_0());
					}
					lv_assignment_2_0=ruleAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetRule());
						}
						set(
							$current,
							"assignment",
							lv_assignment_2_0,
							"org.cirad.dsl.xtext.Breactive.Assignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSetAccess().getOutcome_edgeUnconditionedEdgeParserRuleCall_2_0());
				}
				lv_outcome_edge_3_0=ruleUnconditionedEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetRule());
					}
					add(
						$current,
						"outcome_edge",
						lv_outcome_edge_3_0,
						"org.cirad.dsl.xtext.Breactive.UnconditionedEdge");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Rule TypeEnum
ruleTypeEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='String'
			{
				$current = grammarAccess.getTypeEnumAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeEnumAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Int'
			{
				$current = grammarAccess.getTypeEnumAccess().getIntegerEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeEnumAccess().getIntegerEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Float'
			{
				$current = grammarAccess.getTypeEnumAccess().getFloatEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeEnumAccess().getFloatEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Boolean'
			{
				$current = grammarAccess.getTypeEnumAccess().getBooleanEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTypeEnumAccess().getBooleanEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Location'
			{
				$current = grammarAccess.getTypeEnumAccess().getLocationEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTypeEnumAccess().getLocationEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='LocationSet'
			{
				$current = grammarAccess.getTypeEnumAccess().getLocationsetEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getTypeEnumAccess().getLocationsetEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='Entity'
			{
				$current = grammarAccess.getTypeEnumAccess().getEntityEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getTypeEnumAccess().getEntityEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='EntitySet'
			{
				$current = grammarAccess.getTypeEnumAccess().getEntitysetEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getTypeEnumAccess().getEntitysetEnumLiteralDeclaration_7());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
