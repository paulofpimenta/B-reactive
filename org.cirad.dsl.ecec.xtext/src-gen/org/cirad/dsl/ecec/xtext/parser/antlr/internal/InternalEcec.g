/*
* generated by Xtext
*/
grammar InternalEcec;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.cirad.dsl.ecec.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.cirad.dsl.ecec.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.cirad.dsl.ecec.xtext.services.EcecGrammarAccess;

}

@parser::members {

 	private EcecGrammarAccess grammarAccess;
 	
    public InternalEcecParser(TokenStream input, EcecGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected EcecGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 0);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getAgentAgentEntityParserRuleCall_0_0()); 
	    }
		lv_agent_1_0=ruleAgentEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"agent",
        		lv_agent_1_0, 
        		"AgentEntity");
	        afterParserOrEnumRuleCall();
	    }

)
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getSpatialEntitySpatialEntityParserRuleCall_1_0()); 
	    }
		lv_spatialEntity_2_0=ruleSpatialEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"spatialEntity",
        		lv_spatialEntity_2_0, 
        		"SpatialEntity");
	        afterParserOrEnumRuleCall();
	    }

)
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 2);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getSpaceSpaceParserRuleCall_2_0()); 
	    }
		lv_space_3_0=ruleSpace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"space",
        		lv_space_3_0, 
        		"Space");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getModelAccess().getUnorderedGroup())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup());
	}

)
;





// Entry rule entryRuleSpace
entryRuleSpace returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpaceRule()); }
	 iv_ruleSpace=ruleSpace 
	 { $current=$iv_ruleSpace.current; } 
	 EOF 
;

// Rule Space
ruleSpace returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Space' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpaceAccess().getSpaceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSpaceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpaceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpaceAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='Number of cells' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSpaceAccess().getNumberOfCellsKeyword_3_0());
    }
(
(
		lv_numcells_4_0=RULE_INT
		{
			newLeafNode(lv_numcells_4_0, grammarAccess.getSpaceAccess().getNumcellsINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpaceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"numcells",
        		lv_numcells_4_0, 
        		"INT");
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSpaceAccess().getSemicolonKeyword_3_2());
    }
	otherlv_6='Type of Neighborhood' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSpaceAccess().getTypeOfNeighborhoodKeyword_3_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpaceAccess().getTypeneighTypeofNeighbourhoodEnumRuleCall_3_4_0()); 
	    }
		lv_typeneigh_7_0=ruleTypeofNeighbourhood		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpaceRule());
	        }
       		set(
       			$current, 
       			"typeneigh",
        		lv_typeneigh_7_0, 
        		"TypeofNeighbourhood");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSpaceAccess().getSemicolonKeyword_3_5());
    }
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSpaceAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleCell
entryRuleCell returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCellRule()); }
	 iv_ruleCell=ruleCell 
	 { $current=$iv_ruleCell.current; } 
	 EOF 
;

// Rule Cell
ruleCell returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCellAccess().getCellAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getCellAccess().getOccupiedbyspatialEntitySpatialEntityCrossReference_1_0()); 
	}

)
)	otherlv_2='.cell.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCellAccess().getCellKeyword_2());
    }
((	otherlv_3='occupied' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCellAccess().getOccupiedKeyword_3_0_0());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCellAccess().getColonKeyword_3_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCellAccess().getOcuppiedBooleanExpressionParserRuleCall_3_0_2_0()); 
	    }
		lv_ocuppied_5_0=ruleBooleanExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCellRule());
	        }
       		set(
       			$current, 
       			"ocuppied",
        		lv_ocuppied_5_0, 
        		"BooleanExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='x' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCellAccess().getXKeyword_3_1_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCellAccess().getColonKeyword_3_1_1());
    }
(
(
		lv_x_8_0=RULE_INT
		{
			newLeafNode(lv_x_8_0, grammarAccess.getCellAccess().getXINTTerminalRuleCall_3_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"x",
        		lv_x_8_0, 
        		"INT");
	    }

)
))?(	otherlv_9='y' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCellAccess().getYKeyword_3_2_0());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCellAccess().getColonKeyword_3_2_1());
    }
(
(
		lv_y_11_0=RULE_INT
		{
			newLeafNode(lv_y_11_0, grammarAccess.getCellAccess().getYINTTerminalRuleCall_3_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"y",
        		lv_y_11_0, 
        		"INT");
	    }

)
))?(	otherlv_12='is occupied by' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCellAccess().getIsOccupiedByKeyword_3_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getCellAccess().getOccupiedbyAgentEntityAgentEntityCrossReference_3_3_1_0()); 
	}

)
))?(	otherlv_14='is not occupied by' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCellAccess().getIsNotOccupiedByKeyword_3_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellRule());
	        }
        }
	otherlv_15=RULE_ID
	{
		newLeafNode(otherlv_15, grammarAccess.getCellAccess().getOccupiedbyAgentEntityAgentEntityCrossReference_3_4_1_0()); 
	}

)
))?))
;





// Entry rule entryRuleNeighborhoodExpression
entryRuleNeighborhoodExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNeighborhoodExpressionRule()); }
	 iv_ruleNeighborhoodExpression=ruleNeighborhoodExpression 
	 { $current=$iv_ruleNeighborhoodExpression.current; } 
	 EOF 
;

// Rule NeighborhoodExpression
ruleNeighborhoodExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNeighborhoodExpressionAccess().getNeighborhoodExpressionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNeighborhoodExpressionAccess().getNNeighbourhooEnumEnumRuleCall_1_0()); 
	    }
		lv_n_1_0=ruleNeighbourhooEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNeighborhoodExpressionRule());
	        }
       		add(
       			$current, 
       			"n",
        		lv_n_1_0, 
        		"NeighbourhooEnum");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNeighborhoodExpressionAccess().getAAttributionTypeParserRuleCall_2_0()); 
	    }
		lv_a_2_0=ruleAttributionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNeighborhoodExpressionRule());
	        }
       		set(
       			$current, 
       			"a",
        		lv_a_2_0, 
        		"AttributionType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAgentEntity
entryRuleAgentEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAgentEntityRule()); }
	 iv_ruleAgentEntity=ruleAgentEntity 
	 { $current=$iv_ruleAgentEntity.current; } 
	 EOF 
;

// Rule AgentEntity
ruleAgentEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Entity Agent :' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAgentEntityAccess().getEntityAgentKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAgentEntityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAgentEntityAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='Number of Agents :' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAgentEntityAccess().getNumberOfAgentsKeyword_3_0());
    }
(
(
		lv_agentNumbers_4_0=RULE_INT
		{
			newLeafNode(lv_agentNumbers_4_0, grammarAccess.getAgentEntityAccess().getAgentNumbersINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"agentNumbers",
        		lv_agentNumbers_4_0, 
        		"INT");
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAgentEntityAccess().getSemicolonKeyword_3_2());
    }
	otherlv_6='Initial Agents Location :' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAgentEntityAccess().getInitialAgentsLocationKeyword_3_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentEntityAccess().getInitialAgentLocationInitialLocationTypeParserRuleCall_3_4_0()); 
	    }
		lv_initialAgentLocation_7_0=ruleInitialLocationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentEntityRule());
	        }
       		set(
       			$current, 
       			"initialAgentLocation",
        		lv_initialAgentLocation_7_0, 
        		"InitialLocationType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='at' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAgentEntityAccess().getAtKeyword_3_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentEntityRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getAgentEntityAccess().getSpatialEntitySpatialEntityCrossReference_3_5_1_0()); 
	}

)
))?	otherlv_10=';' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAgentEntityAccess().getSemicolonKeyword_3_6());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentEntityAccess().getAgentparametersParameterExpressionParserRuleCall_3_7_0_0()); 
	    }
		lv_agentparameters_11_1=ruleParameterExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentEntityRule());
	        }
       		add(
       			$current, 
       			"agentparameters",
        		lv_agentparameters_11_1, 
        		"ParameterExpression");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAgentEntityAccess().getAgentparametersDimensionExpressionParserRuleCall_3_7_0_1()); 
	    }
		lv_agentparameters_11_2=ruleDimensionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentEntityRule());
	        }
       		add(
       			$current, 
       			"agentparameters",
        		lv_agentparameters_11_2, 
        		"DimensionExpression");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAgentEntityAccess().getAgentparametersRandomBetweenExpressionParserRuleCall_3_7_0_2()); 
	    }
		lv_agentparameters_11_3=ruleRandomBetweenExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentEntityRule());
	        }
       		add(
       			$current, 
       			"agentparameters",
        		lv_agentparameters_11_3, 
        		"RandomBetweenExpression");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentEntityAccess().getAgentfunctionFunctionExpressionParserRuleCall_3_8_0()); 
	    }
		lv_agentfunction_12_0=ruleFunctionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentEntityRule());
	        }
       		add(
       			$current, 
       			"agentfunction",
        		lv_agentfunction_12_0, 
        		"FunctionExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentEntityAccess().getAgentbehaviourdefinitionBehaviourParserRuleCall_3_9_0()); 
	    }
		lv_agentbehaviourdefinition_13_0=ruleBehaviour		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentEntityRule());
	        }
       		add(
       			$current, 
       			"agentbehaviourdefinition",
        		lv_agentbehaviourdefinition_13_0, 
        		"Behaviour");
	        afterParserOrEnumRuleCall();
	    }

)
)*)	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getAgentEntityAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSpatialEntity
entryRuleSpatialEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpatialEntityRule()); }
	 iv_ruleSpatialEntity=ruleSpatialEntity 
	 { $current=$iv_ruleSpatialEntity.current; } 
	 EOF 
;

// Rule SpatialEntity
ruleSpatialEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Spatial Entity :' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpatialEntityAccess().getSpatialEntityKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSpatialEntityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpatialEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpatialEntityAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='Entities per cell :' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSpatialEntityAccess().getEntitiesPerCellKeyword_3_0());
    }
(
(
		lv_number_4_0=RULE_INT
		{
			newLeafNode(lv_number_4_0, grammarAccess.getSpatialEntityAccess().getNumberINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpatialEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"number",
        		lv_number_4_0, 
        		"INT");
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSpatialEntityAccess().getSemicolonKeyword_3_2());
    }
	otherlv_6='Initial Location Type :' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSpatialEntityAccess().getInitialLocationTypeKeyword_3_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpatialEntityAccess().getLocationtypeInitialLocationTypeParserRuleCall_3_4_0()); 
	    }
		lv_locationtype_7_0=ruleInitialLocationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpatialEntityRule());
	        }
       		set(
       			$current, 
       			"locationtype",
        		lv_locationtype_7_0, 
        		"InitialLocationType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSpatialEntityAccess().getSemicolonKeyword_3_5());
    }
	otherlv_9='Patch size :' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSpatialEntityAccess().getPatchSizeKeyword_3_6());
    }
(
(
		lv_X_10_0=RULE_INT
		{
			newLeafNode(lv_X_10_0, grammarAccess.getSpatialEntityAccess().getXINTTerminalRuleCall_3_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpatialEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"X",
        		lv_X_10_0, 
        		"INT");
	    }

)
)	otherlv_11='x' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSpatialEntityAccess().getXKeyword_3_8());
    }
(
(
		lv_Y_12_0=RULE_INT
		{
			newLeafNode(lv_Y_12_0, grammarAccess.getSpatialEntityAccess().getYINTTerminalRuleCall_3_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpatialEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Y",
        		lv_Y_12_0, 
        		"INT");
	    }

)
)	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSpatialEntityAccess().getSemicolonKeyword_3_10());
    }
	otherlv_14='Gap between patches:' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSpatialEntityAccess().getGapBetweenPatchesKeyword_3_11());
    }
(
(
		lv_gap_15_0=RULE_INT
		{
			newLeafNode(lv_gap_15_0, grammarAccess.getSpatialEntityAccess().getGapINTTerminalRuleCall_3_12_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpatialEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"gap",
        		lv_gap_15_0, 
        		"INT");
	    }

)
)	otherlv_16=';' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getSpatialEntityAccess().getSemicolonKeyword_3_13());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpatialEntityAccess().getParametersParameterExpressionParserRuleCall_3_14_0_0()); 
	    }
		lv_parameters_17_1=ruleParameterExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpatialEntityRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_17_1, 
        		"ParameterExpression");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSpatialEntityAccess().getParametersDimensionExpressionParserRuleCall_3_14_0_1()); 
	    }
		lv_parameters_17_2=ruleDimensionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpatialEntityRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_17_2, 
        		"DimensionExpression");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSpatialEntityAccess().getParametersRandomBetweenExpressionParserRuleCall_3_14_0_2()); 
	    }
		lv_parameters_17_3=ruleRandomBetweenExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpatialEntityRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_17_3, 
        		"RandomBetweenExpression");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSpatialEntityAccess().getFunctionFunctionExpressionParserRuleCall_3_15_0()); 
	    }
		lv_function_18_0=ruleFunctionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpatialEntityRule());
	        }
       		add(
       			$current, 
       			"function",
        		lv_function_18_0, 
        		"FunctionExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSpatialEntityAccess().getBehaviourdefinitionBehaviourParserRuleCall_3_16_0()); 
	    }
		lv_behaviourdefinition_19_0=ruleBehaviour		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpatialEntityRule());
	        }
       		add(
       			$current, 
       			"behaviourdefinition",
        		lv_behaviourdefinition_19_0, 
        		"Behaviour");
	        afterParserOrEnumRuleCall();
	    }

)
)*)	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getSpatialEntityAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleInitialLocationType
entryRuleInitialLocationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitialLocationTypeRule()); }
	 iv_ruleInitialLocationType=ruleInitialLocationType 
	 { $current=$iv_ruleInitialLocationType.current; } 
	 EOF 
;

// Rule InitialLocationType
ruleInitialLocationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=	'Random' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getInitialLocationTypeAccess().getNameRandomKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInitialLocationTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Random");
	    }

)
)
;





// Entry rule entryRuleBehaviour
entryRuleBehaviour returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBehaviourRule()); }
	 iv_ruleBehaviour=ruleBehaviour 
	 { $current=$iv_ruleBehaviour.current; } 
	 EOF 
;

// Rule Behaviour
ruleBehaviour returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Behavior' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBehaviourAccess().getBehaviorKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBehaviourAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBehaviourRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBehaviourAccess().getColonKeyword_2());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getBehaviourAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBehaviourAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBehaviourAccess().getUnorderedGroup_3(), 0);
	 				}
					({true}?=>(	otherlv_4='Starts {' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBehaviourAccess().getStartsKeyword_3_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviourAccess().getHasStartStartActivityDeclarationParserRuleCall_3_0_1_0()); 
	    }
		lv_hasStart_5_0=ruleStartActivityDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviourRule());
	        }
       		add(
       			$current, 
       			"hasStart",
        		lv_hasStart_5_0, 
        		"StartActivityDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBehaviourAccess().getCommaKeyword_3_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviourAccess().getHasStartStartActivityDeclarationParserRuleCall_3_0_2_1_0()); 
	    }
		lv_hasStart_7_0=ruleStartActivityDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviourRule());
	        }
       		add(
       			$current, 
       			"hasStart",
        		lv_hasStart_7_0, 
        		"StartActivityDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBehaviourAccess().getRightCurlyBracketKeyword_3_0_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBehaviourAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBehaviourAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBehaviourAccess().getUnorderedGroup_3(), 1);
	 				}
					({true}?=>(	otherlv_9='Finishes {' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBehaviourAccess().getFinishesKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviourAccess().getHasEndFinishActivityParserRuleCall_3_1_1_0()); 
	    }
		lv_hasEnd_10_0=ruleFinishActivity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviourRule());
	        }
       		add(
       			$current, 
       			"hasEnd",
        		lv_hasEnd_10_0, 
        		"FinishActivity");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBehaviourAccess().getCommaKeyword_3_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviourAccess().getHasEndFinishActivityParserRuleCall_3_1_2_1_0()); 
	    }
		lv_hasEnd_12_0=ruleFinishActivity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviourRule());
	        }
       		add(
       			$current, 
       			"hasEnd",
        		lv_hasEnd_12_0, 
        		"FinishActivity");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getBehaviourAccess().getRightCurlyBracketKeyword_3_1_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBehaviourAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBehaviourAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBehaviourAccess().getUnorderedGroup_3(), 2);
	 				}
					({true}?=>(	otherlv_14='Conditions {' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getBehaviourAccess().getConditionsKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviourAccess().getHasConditionConditionParserRuleCall_3_2_1_0()); 
	    }
		lv_hasCondition_15_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviourRule());
	        }
       		add(
       			$current, 
       			"hasCondition",
        		lv_hasCondition_15_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getBehaviourAccess().getCommaKeyword_3_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviourAccess().getHasConditionConditionParserRuleCall_3_2_2_1_0()); 
	    }
		lv_hasCondition_17_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviourRule());
	        }
       		add(
       			$current, 
       			"hasCondition",
        		lv_hasCondition_17_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getBehaviourAccess().getRightCurlyBracketKeyword_3_2_3());
    }
	otherlv_19='then {' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getBehaviourAccess().getThenKeyword_3_2_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviourAccess().getExecutesExecutionDeclarationParserRuleCall_3_2_5_0()); 
	    }
		lv_executes_20_0=ruleExecutionDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviourRule());
	        }
       		add(
       			$current, 
       			"executes",
        		lv_executes_20_0, 
        		"ExecutionDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21=',' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getBehaviourAccess().getCommaKeyword_3_2_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviourAccess().getExecutesExecutionDeclarationParserRuleCall_3_2_6_1_0()); 
	    }
		lv_executes_22_0=ruleExecutionDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviourRule());
	        }
       		add(
       			$current, 
       			"executes",
        		lv_executes_22_0, 
        		"ExecutionDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getBehaviourAccess().getRightCurlyBracketKeyword_3_2_7());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBehaviourAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getBehaviourAccess().getUnorderedGroup_3())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getBehaviourAccess().getUnorderedGroup_3());
	}

)	otherlv_24='End.' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getBehaviourAccess().getEndKeyword_4());
    }
)
;





// Entry rule entryRuleBehaviourQualifiedName
entryRuleBehaviourQualifiedName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBehaviourQualifiedNameRule()); }
	 iv_ruleBehaviourQualifiedName=ruleBehaviourQualifiedName 
	 { $current=$iv_ruleBehaviourQualifiedName.current; } 
	 EOF 
;

// Rule BehaviourQualifiedName
ruleBehaviourQualifiedName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBehaviourQualifiedNameRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBehaviourQualifiedNameAccess().getNameBehaviourCrossReference_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleParameterQualifiedName
entryRuleParameterQualifiedName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterQualifiedNameRule()); }
	 iv_ruleParameterQualifiedName=ruleParameterQualifiedName 
	 { $current=$iv_ruleParameterQualifiedName.current; } 
	 EOF 
;

// Rule ParameterQualifiedName
ruleParameterQualifiedName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterQualifiedNameAccess().getParameterQualifiedNameAction_0(),
            $current);
    }
)	otherlv_1='parameter' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterQualifiedNameAccess().getParameterKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterQualifiedNameRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getParameterQualifiedNameAccess().getNameParameterExpressionCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterQualifiedNameAccess().getAAttributionParserRuleCall_3_0()); 
	    }
		lv_a_3_0=ruleAttribution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterQualifiedNameRule());
	        }
       		set(
       			$current, 
       			"a",
        		lv_a_3_0, 
        		"Attribution");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFunctionQualifiedName
entryRuleFunctionQualifiedName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionQualifiedNameRule()); }
	 iv_ruleFunctionQualifiedName=ruleFunctionQualifiedName 
	 { $current=$iv_ruleFunctionQualifiedName.current; } 
	 EOF 
;

// Rule FunctionQualifiedName
ruleFunctionQualifiedName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionQualifiedNameAccess().getFunctionQualifiedNameAction_0(),
            $current);
    }
)	otherlv_1='function' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFunctionQualifiedNameAccess().getFunctionKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionQualifiedNameRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFunctionQualifiedNameAccess().getNameFunctionExpressionCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionQualifiedNameAccess().getAAttributionParserRuleCall_3_0()); 
	    }
		lv_a_3_0=ruleAttribution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionQualifiedNameRule());
	        }
       		set(
       			$current, 
       			"a",
        		lv_a_3_0, 
        		"Attribution");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAttribution
entryRuleAttribution returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributionRule()); }
	 iv_ruleAttribution=ruleAttribution 
	 { $current=$iv_ruleAttribution.current; } 
	 EOF 
;

// Rule Attribution
ruleAttribution returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributionAccess().getAttributionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributionAccess().getEqualityEqualityEnumRuleCall_1_0()); 
	    }
		lv_equality_1_0=ruleEquality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributionRule());
	        }
       		set(
       			$current, 
       			"equality",
        		lv_equality_1_0, 
        		"Equality");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributionAccess().getExpressionPrimaryParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=rulePrimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"Primary");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAttributionType
entryRuleAttributionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributionTypeRule()); }
	 iv_ruleAttributionType=ruleAttributionType 
	 { $current=$iv_ruleAttributionType.current; } 
	 EOF 
;

// Rule AttributionType
ruleAttributionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributionTypeAccess().getAttributionTypeAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributionTypeAccess().getPParameterQualifiedNameParserRuleCall_0_1_0()); 
	    }
		lv_p_1_0=ruleParameterQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributionTypeRule());
	        }
       		set(
       			$current, 
       			"p",
        		lv_p_1_0, 
        		"ParameterQualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributionTypeAccess().getFFunctionQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_f_2_0=ruleFunctionQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributionTypeRule());
	        }
       		set(
       			$current, 
       			"f",
        		lv_f_2_0, 
        		"FunctionQualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStartActivityDeclaration
entryRuleStartActivityDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStartActivityDeclarationRule()); }
	 iv_ruleStartActivityDeclaration=ruleStartActivityDeclaration 
	 { $current=$iv_ruleStartActivityDeclaration.current; } 
	 EOF 
;

// Rule StartActivityDeclaration
ruleStartActivityDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStartActivityDeclarationAccess().getSaefStarAndEndExpEnumRuleCall_0_0()); 
	    }
		lv_saef_0_0=ruleStarAndEndExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartActivityDeclarationRule());
	        }
       		add(
       			$current, 
       			"saef",
        		lv_saef_0_0, 
        		"StarAndEndExp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStartActivityDeclarationAccess().getBe2BehaviourQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_be2_1_0=ruleBehaviourQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartActivityDeclarationRule());
	        }
       		add(
       			$current, 
       			"be2",
        		lv_be2_1_0, 
        		"BehaviourQualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFinishActivity
entryRuleFinishActivity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFinishActivityRule()); }
	 iv_ruleFinishActivity=ruleFinishActivity 
	 { $current=$iv_ruleFinishActivity.current; } 
	 EOF 
;

// Rule FinishActivity
ruleFinishActivity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFinishActivityAccess().getSaefStarAndEndExpEnumRuleCall_0_0()); 
	    }
		lv_saef_0_0=ruleStarAndEndExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFinishActivityRule());
	        }
       		add(
       			$current, 
       			"saef",
        		lv_saef_0_0, 
        		"StarAndEndExp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFinishActivityAccess().getBe2BehaviourQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_be2_1_0=ruleBehaviourQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFinishActivityRule());
	        }
       		add(
       			$current, 
       			"be2",
        		lv_be2_1_0, 
        		"BehaviourQualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	 iv_ruleCondition=ruleCondition 
	 { $current=$iv_ruleCondition.current; } 
	 EOF 
;

// Rule Condition
ruleCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConditionAccess().getConditionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getCeConditionEnumEnumRuleCall_1_0()); 
	    }
		lv_ce_1_0=ruleConditionEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		add(
       			$current, 
       			"ce",
        		lv_ce_1_0, 
        		"ConditionEnum");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getAAttributionTypeParserRuleCall_3_0_0()); 
	    }
		lv_a_3_0=ruleAttributionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		add(
       			$current, 
       			"a",
        		lv_a_3_0, 
        		"AttributionType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getMCellParserRuleCall_3_1_0()); 
	    }
		lv_m_4_0=ruleCell		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		set(
       			$current, 
       			"m",
        		lv_m_4_0, 
        		"Cell");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getNNeighborhoodExpressionParserRuleCall_3_2_0()); 
	    }
		lv_n_5_0=ruleNeighborhoodExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		set(
       			$current, 
       			"n",
        		lv_n_5_0, 
        		"NeighborhoodExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConditionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleExecutionDeclaration
entryRuleExecutionDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExecutionDeclarationRule()); }
	 iv_ruleExecutionDeclaration=ruleExecutionDeclaration 
	 { $current=$iv_ruleExecutionDeclaration.current; } 
	 EOF 
;

// Rule ExecutionDeclaration
ruleExecutionDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExecutionDeclarationAccess().getExecutionDeclarationAction_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExecutionDeclarationAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getExecutionDeclarationAccess().getAAttributionTypeParserRuleCall_2_0_0()); 
	    }
		lv_a_2_0=ruleAttributionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecutionDeclarationRule());
	        }
       		add(
       			$current, 
       			"a",
        		lv_a_2_0, 
        		"AttributionType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExecutionDeclarationAccess().getArgBehaviourQualifiedNameParserRuleCall_2_1_0()); 
	    }
		lv_arg_3_0=ruleBehaviourQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecutionDeclarationRule());
	        }
       		set(
       			$current, 
       			"arg",
        		lv_arg_3_0, 
        		"BehaviourQualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExecutionDeclarationAccess().getMMoveExpressionParserRuleCall_2_2_0()); 
	    }
		lv_m_4_0=ruleMoveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecutionDeclarationRule());
	        }
       		set(
       			$current, 
       			"m",
        		lv_m_4_0, 
        		"MoveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExecutionDeclarationAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleAddition
entryRuleAddition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditionRule()); }
	 iv_ruleAddition=ruleAddition 
	 { $current=$iv_ruleAddition.current; } 
	 EOF 
;

// Rule Addition
ruleAddition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); 
    }
    this_Multiplication_0=ruleMultiplication
    { 
        $current = $this_Multiplication_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='+' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='-' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleMultiplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"Multiplication");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMultiplication
entryRuleMultiplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicationRule()); }
	 iv_ruleMultiplication=ruleMultiplication 
	 { $current=$iv_ruleMultiplication.current; } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMultiplicationAccess().getPrimaryParserRuleCall_0()); 
    }
    this_Primary_0=rulePrimary
    { 
        $current = $this_Primary_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='*' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='/' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPrimaryParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=rulePrimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"Primary");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	 iv_rulePrimary=rulePrimary 
	 { $current=$iv_rulePrimary.current; } 
	 EOF 
;

// Rule Primary
rulePrimary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getFLOATParserRuleCall_0()); 
    }
    this_FLOAT_0=ruleFLOAT
    { 
        $current = $this_FLOAT_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPrimaryAccess().getParametersParameterExpressionCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_0());
    }

    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getAdditionParserRuleCall_2_1()); 
    }
    this_Addition_3=ruleAddition
    { 
        $current = $this_Addition_3.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_2());
    }
))
;





// Entry rule entryRuleFLOAT
entryRuleFLOAT returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFLOATRule()); }
	 iv_ruleFLOAT=ruleFLOAT 
	 { $current=$iv_ruleFLOAT.current; } 
	 EOF 
;

// Rule FLOAT
ruleFLOAT returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=RULE_INT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getFLOATAccess().getValueINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFLOATRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"INT");
	    }

)
)(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFLOATAccess().getFullStopKeyword_1_0());
    }
this_INT_2=RULE_INT
    { 
    newLeafNode(this_INT_2, grammarAccess.getFLOATAccess().getINTTerminalRuleCall_1_1()); 
    }
)?)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getAlgebricExpressionParserRuleCall_0()); 
    }
    this_AlgebricExpression_0=ruleAlgebricExpression
    { 
        $current = $this_AlgebricExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_1()); 
    }
    this_BooleanExpression_1=ruleBooleanExpression
    { 
        $current = $this_BooleanExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getDimensionExpressionParserRuleCall_2()); 
    }
    this_DimensionExpression_2=ruleDimensionExpression
    { 
        $current = $this_DimensionExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getRandomBetweenExpressionParserRuleCall_3()); 
    }
    this_RandomBetweenExpression_3=ruleRandomBetweenExpression
    { 
        $current = $this_RandomBetweenExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAlgebricExpression
entryRuleAlgebricExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlgebricExpressionRule()); }
	 iv_ruleAlgebricExpression=ruleAlgebricExpression 
	 { $current=$iv_ruleAlgebricExpression.current; } 
	 EOF 
;

// Rule AlgebricExpression
ruleAlgebricExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAlgebricExpressionAccess().getArgsAdditionParserRuleCall_0_0()); 
	    }
		lv_args_0_0=ruleAddition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlgebricExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_0_0, 
        		"Addition");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAlgebricExpressionAccess().getArgsAdditionParserRuleCall_1_0()); 
	    }
		lv_args_1_0=ruleAddition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlgebricExpressionRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_1_0, 
        		"Addition");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_2='% of' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAlgebricExpressionAccess().getOfKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAlgebricExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAlgebricExpressionAccess().getArgParameterExpressionCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleMoveExpression
entryRuleMoveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMoveExpressionRule()); }
	 iv_ruleMoveExpression=ruleMoveExpression 
	 { $current=$iv_ruleMoveExpression.current; } 
	 EOF 
;

// Rule MoveExpression
ruleMoveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'move to ' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getMoveExpressionAccess().getNameMoveToKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMoveExpressionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "move to ");
	    }

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getMoveExpressionAccess().getMoveCellParserRuleCall_1_0_0()); 
	    }
		lv_move_1_1=ruleCell		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMoveExpressionRule());
	        }
       		set(
       			$current, 
       			"move",
        		lv_move_1_1, 
        		"Cell");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getMoveExpressionAccess().getMoveNeighborhoodExpressionParserRuleCall_1_0_1()); 
	    }
		lv_move_1_2=ruleNeighborhoodExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMoveExpressionRule());
	        }
       		set(
       			$current, 
       			"move",
        		lv_move_1_2, 
        		"NeighborhoodExpression");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;





// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	 iv_ruleBooleanExpression=ruleBooleanExpression 
	 { $current=$iv_ruleBooleanExpression.current; } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBooleanExpressionAccess().getBooleanExpressionAction_0(),
            $current);
    }
)((
(
		lv_value_1_0=	'true' 
    {
        newLeafNode(lv_value_1_0, grammarAccess.getBooleanExpressionAccess().getValueTrueKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanExpressionRule());
	        }
       		setWithLastConsumed($current, "value", true, "true");
	    }

)
)
    |	otherlv_2='false' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBooleanExpressionAccess().getFalseKeyword_1_1());
    }
))
;





// Entry rule entryRuleDimensionExpression
entryRuleDimensionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDimensionExpressionRule()); }
	 iv_ruleDimensionExpression=ruleDimensionExpression 
	 { $current=$iv_ruleDimensionExpression.current; } 
	 EOF 
;

// Rule DimensionExpression
ruleDimensionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionExpressionAccess().getDDimensionsParserRuleCall_0_0()); 
	    }
		lv_d_0_0=ruleDimensions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionExpressionRule());
	        }
       		set(
       			$current, 
       			"d",
        		lv_d_0_0, 
        		"Dimensions");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDimensionExpressionAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleRandomBetweenExpression
entryRuleRandomBetweenExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomBetweenExpressionRule()); }
	 iv_ruleRandomBetweenExpression=ruleRandomBetweenExpression 
	 { $current=$iv_ruleRandomBetweenExpression.current; } 
	 EOF 
;

// Rule RandomBetweenExpression
ruleRandomBetweenExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRandomBetweenExpressionAccess().getRandomBetweenExpressionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRandomBetweenExpressionAccess().getRMathFunctionsEnumEnumRuleCall_1_0()); 
	    }
		lv_r_1_0=ruleMathFunctionsEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomBetweenExpressionRule());
	        }
       		set(
       			$current, 
       			"r",
        		lv_r_1_0, 
        		"MathFunctionsEnum");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_2='between' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRandomBetweenExpressionAccess().getBetweenKeyword_2_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRandomBetweenExpressionAccess().getFFLOATParserRuleCall_2_1_0_0()); 
	    }
		lv_f_3_0=ruleFLOAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomBetweenExpressionRule());
	        }
       		set(
       			$current, 
       			"f",
        		lv_f_3_0, 
        		"FLOAT");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_4='parameter' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRandomBetweenExpressionAccess().getParameterKeyword_2_1_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRandomBetweenExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRandomBetweenExpressionAccess().getF1ParameterExpressionCrossReference_2_1_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))	otherlv_6='and' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRandomBetweenExpressionAccess().getAndKeyword_2_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRandomBetweenExpressionAccess().getF2FLOATParserRuleCall_2_3_0_0()); 
	    }
		lv_f2_7_0=ruleFLOAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandomBetweenExpressionRule());
	        }
       		set(
       			$current, 
       			"f2",
        		lv_f2_7_0, 
        		"FLOAT");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_8='parameter' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRandomBetweenExpressionAccess().getParameterKeyword_2_3_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRandomBetweenExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRandomBetweenExpressionAccess().getF3ParameterExpressionCrossReference_2_3_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))))?	otherlv_10=';' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRandomBetweenExpressionAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleParameterExpression
entryRuleParameterExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterExpressionRule()); }
	 iv_ruleParameterExpression=ruleParameterExpression 
	 { $current=$iv_ruleParameterExpression.current; } 
	 EOF 
;

// Rule ParameterExpression
ruleParameterExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Parameter' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParameterExpressionAccess().getParameterKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getParameterExpressionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParameterExpressionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterExpressionAccess().getExExpressionParserRuleCall_3_0()); 
	    }
		lv_ex_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterExpressionRule());
	        }
       		set(
       			$current, 
       			"ex",
        		lv_ex_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFunctionExpression
entryRuleFunctionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionExpressionRule()); }
	 iv_ruleFunctionExpression=ruleFunctionExpression 
	 { $current=$iv_ruleFunctionExpression.current; } 
	 EOF 
;

// Rule FunctionExpression
ruleFunctionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Function' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFunctionExpressionAccess().getFunctionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFunctionExpressionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunctionExpressionAccess().getEqualsSignKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionExpressionAccess().getRightAdditionParserRuleCall_3_0_0()); 
	    }
		lv_right_3_0=ruleAddition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionExpressionRule());
	        }
       		add(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"Addition");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionExpressionAccess().getRightAdditionParserRuleCall_3_1_0()); 
	    }
		lv_right_4_0=ruleAddition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionExpressionRule());
	        }
       		add(
       			$current, 
       			"right",
        		lv_right_4_0, 
        		"Addition");
	        afterParserOrEnumRuleCall();
	    }

)
)*)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFunctionExpressionAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleDimensions
entryRuleDimensions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDimensionsRule()); }
	 iv_ruleDimensions=ruleDimensions 
	 { $current=$iv_ruleDimensions.current; } 
	 EOF 
;

// Rule Dimensions
ruleDimensions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_dim_0_0=	'lengths' 
    {
        newLeafNode(lv_dim_0_0, grammarAccess.getDimensionsAccess().getDimLengthsKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDimensionsRule());
	        }
       		setWithLastConsumed($current, "dim", lv_dim_0_0, "lengths");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionsAccess().getNameFLOATParserRuleCall_0_1_0()); 
	    }
		lv_name_1_0=ruleFLOAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionsRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"FLOAT");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionsAccess().getLenLenghtsUnitsParserRuleCall_0_2_0()); 
	    }
		lv_len_2_0=ruleLenghtsUnits		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionsRule());
	        }
       		set(
       			$current, 
       			"len",
        		lv_len_2_0, 
        		"LenghtsUnits");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_dim_3_0=	'lasts' 
    {
        newLeafNode(lv_dim_3_0, grammarAccess.getDimensionsAccess().getDimLastsKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDimensionsRule());
	        }
       		setWithLastConsumed($current, "dim", lv_dim_3_0, "lasts");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionsAccess().getNameFLOATParserRuleCall_1_1_0()); 
	    }
		lv_name_4_0=ruleFLOAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionsRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"FLOAT");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionsAccess().getDurTimeUnitsParserRuleCall_1_2_0()); 
	    }
		lv_dur_5_0=ruleTimeUnits		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionsRule());
	        }
       		set(
       			$current, 
       			"dur",
        		lv_dur_5_0, 
        		"TimeUnits");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_dim_6_0=	'weights' 
    {
        newLeafNode(lv_dim_6_0, grammarAccess.getDimensionsAccess().getDimWeightsKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDimensionsRule());
	        }
       		setWithLastConsumed($current, "dim", lv_dim_6_0, "weights");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionsAccess().getNameFLOATParserRuleCall_2_1_0()); 
	    }
		lv_name_7_0=ruleFLOAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionsRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"FLOAT");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionsAccess().getMaMassUnitsParserRuleCall_2_2_0()); 
	    }
		lv_ma_8_0=ruleMassUnits		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionsRule());
	        }
       		set(
       			$current, 
       			"ma",
        		lv_ma_8_0, 
        		"MassUnits");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_dim_9_0=	'has temperature' 
    {
        newLeafNode(lv_dim_9_0, grammarAccess.getDimensionsAccess().getDimHasTemperatureKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDimensionsRule());
	        }
       		setWithLastConsumed($current, "dim", lv_dim_9_0, "has temperature");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionsAccess().getNameFLOATParserRuleCall_3_1_0()); 
	    }
		lv_name_10_0=ruleFLOAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionsRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"FLOAT");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionsAccess().getTempTemperatureUnitsParserRuleCall_3_2_0()); 
	    }
		lv_temp_11_0=ruleTemperatureUnits		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionsRule());
	        }
       		set(
       			$current, 
       			"temp",
        		lv_temp_11_0, 
        		"TemperatureUnits");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleLenghtsUnits
entryRuleLenghtsUnits returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLenghtsUnitsRule()); }
	 iv_ruleLenghtsUnits=ruleLenghtsUnits 
	 { $current=$iv_ruleLenghtsUnits.current; } 
	 EOF 
;

// Rule LenghtsUnits
ruleLenghtsUnits returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_kilometer_0_0=	'km' 
    {
        newLeafNode(lv_kilometer_0_0, grammarAccess.getLenghtsUnitsAccess().getKilometerKmKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLenghtsUnitsRule());
	        }
       		setWithLastConsumed($current, "kilometer", lv_kilometer_0_0, "km");
	    }

)
)
    |(
(
		lv_meter_1_0=	'm' 
    {
        newLeafNode(lv_meter_1_0, grammarAccess.getLenghtsUnitsAccess().getMeterMKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLenghtsUnitsRule());
	        }
       		setWithLastConsumed($current, "meter", lv_meter_1_0, "m");
	    }

)
)
    |(
(
		lv_miles_2_0=	'miles' 
    {
        newLeafNode(lv_miles_2_0, grammarAccess.getLenghtsUnitsAccess().getMilesMilesKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLenghtsUnitsRule());
	        }
       		setWithLastConsumed($current, "miles", lv_miles_2_0, "miles");
	    }

)
)
    |(
(
		lv_hectare_3_0=	'ha' 
    {
        newLeafNode(lv_hectare_3_0, grammarAccess.getLenghtsUnitsAccess().getHectareHaKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLenghtsUnitsRule());
	        }
       		setWithLastConsumed($current, "hectare", lv_hectare_3_0, "ha");
	    }

)
)
    |(
(
		lv_squarekilometer_4_0=	'km\u00C2\u00B2' 
    {
        newLeafNode(lv_squarekilometer_4_0, grammarAccess.getLenghtsUnitsAccess().getSquarekilometerKmKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLenghtsUnitsRule());
	        }
       		setWithLastConsumed($current, "squarekilometer", lv_squarekilometer_4_0, "km\u00C2\u00B2");
	    }

)
))
;





// Entry rule entryRuleTimeUnits
entryRuleTimeUnits returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeUnitsRule()); }
	 iv_ruleTimeUnits=ruleTimeUnits 
	 { $current=$iv_ruleTimeUnits.current; } 
	 EOF 
;

// Rule TimeUnits
ruleTimeUnits returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_hours_0_0=	'h' 
    {
        newLeafNode(lv_hours_0_0, grammarAccess.getTimeUnitsAccess().getHoursHKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeUnitsRule());
	        }
       		setWithLastConsumed($current, "hours", lv_hours_0_0, "h");
	    }

)
)
    |(
(
		lv_minutes_1_0=	'm' 
    {
        newLeafNode(lv_minutes_1_0, grammarAccess.getTimeUnitsAccess().getMinutesMKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeUnitsRule());
	        }
       		setWithLastConsumed($current, "minutes", lv_minutes_1_0, "m");
	    }

)
)
    |(
(
		lv_seconds_2_0=	's' 
    {
        newLeafNode(lv_seconds_2_0, grammarAccess.getTimeUnitsAccess().getSecondsSKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeUnitsRule());
	        }
       		setWithLastConsumed($current, "seconds", lv_seconds_2_0, "s");
	    }

)
))
;





// Entry rule entryRuleMassUnits
entryRuleMassUnits returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMassUnitsRule()); }
	 iv_ruleMassUnits=ruleMassUnits 
	 { $current=$iv_ruleMassUnits.current; } 
	 EOF 
;

// Rule MassUnits
ruleMassUnits returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_kilogram_0_0=	'kg' 
    {
        newLeafNode(lv_kilogram_0_0, grammarAccess.getMassUnitsAccess().getKilogramKgKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMassUnitsRule());
	        }
       		setWithLastConsumed($current, "kilogram", lv_kilogram_0_0, "kg");
	    }

)
)
    |(
(
		lv_gram_1_0=	'g' 
    {
        newLeafNode(lv_gram_1_0, grammarAccess.getMassUnitsAccess().getGramGKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMassUnitsRule());
	        }
       		setWithLastConsumed($current, "gram", lv_gram_1_0, "g");
	    }

)
)
    |(
(
		lv_pounds_2_0=	'lb' 
    {
        newLeafNode(lv_pounds_2_0, grammarAccess.getMassUnitsAccess().getPoundsLbKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMassUnitsRule());
	        }
       		setWithLastConsumed($current, "pounds", lv_pounds_2_0, "lb");
	    }

)
)
    |(
(
		lv_ounces_3_0=	'oz' 
    {
        newLeafNode(lv_ounces_3_0, grammarAccess.getMassUnitsAccess().getOuncesOzKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMassUnitsRule());
	        }
       		setWithLastConsumed($current, "ounces", lv_ounces_3_0, "oz");
	    }

)
))
;





// Entry rule entryRuleTemperatureUnits
entryRuleTemperatureUnits returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemperatureUnitsRule()); }
	 iv_ruleTemperatureUnits=ruleTemperatureUnits 
	 { $current=$iv_ruleTemperatureUnits.current; } 
	 EOF 
;

// Rule TemperatureUnits
ruleTemperatureUnits returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_celsius_0_0=	'C' 
    {
        newLeafNode(lv_celsius_0_0, grammarAccess.getTemperatureUnitsAccess().getCelsiusCKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemperatureUnitsRule());
	        }
       		setWithLastConsumed($current, "celsius", lv_celsius_0_0, "C");
	    }

)
)
    |(
(
		lv_Fahrenheit_1_0=	'F' 
    {
        newLeafNode(lv_Fahrenheit_1_0, grammarAccess.getTemperatureUnitsAccess().getFahrenheitFKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemperatureUnitsRule());
	        }
       		setWithLastConsumed($current, "Fahrenheit", lv_Fahrenheit_1_0, "F");
	    }

)
))
;





// Rule MathFunctionsEnum
ruleMathFunctionsEnum returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='random int' 
	{
        $current = grammarAccess.getMathFunctionsEnumAccess().getRandomintEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMathFunctionsEnumAccess().getRandomintEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='random float' 
	{
        $current = grammarAccess.getMathFunctionsEnumAccess().getRandomdoubleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getMathFunctionsEnumAccess().getRandomdoubleEnumLiteralDeclaration_1()); 
    }
));





// Rule StarAndEndExp
ruleStarAndEndExp returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='after' 
	{
        $current = grammarAccess.getStarAndEndExpAccess().getAfterEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getStarAndEndExpAccess().getAfterEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='with' 
	{
        $current = grammarAccess.getStarAndEndExpAccess().getWithhEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getStarAndEndExpAccess().getWithhEnumLiteralDeclaration_1()); 
    }
));





// Rule ConditionEnum
ruleConditionEnum returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='if' 
	{
        $current = grammarAccess.getConditionEnumAccess().getIfEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getConditionEnumAccess().getIfEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='while' 
	{
        $current = grammarAccess.getConditionEnumAccess().getElseEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getConditionEnumAccess().getElseEnumLiteralDeclaration_1()); 
    }
));



// Rule Equality
ruleEquality returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='bigger than' 
	{
        $current = grammarAccess.getEqualityAccess().getBiggerthanEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getEqualityAccess().getBiggerthanEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='less than' 
	{
        $current = grammarAccess.getEqualityAccess().getLessthanEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getEqualityAccess().getLessthanEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='equal to' 
	{
        $current = grammarAccess.getEqualityAccess().getEqualEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getEqualityAccess().getEqualEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='bigger or equal than' 
	{
        $current = grammarAccess.getEqualityAccess().getBiggerorequalthanEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getEqualityAccess().getBiggerorequalthanEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='less or equal than' 
	{
        $current = grammarAccess.getEqualityAccess().getLessorequalthanEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getEqualityAccess().getLessorequalthanEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='not equal to' 
	{
        $current = grammarAccess.getEqualityAccess().getNotequaltoEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getEqualityAccess().getNotequaltoEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='is the smallest' 
	{
        $current = grammarAccess.getEqualityAccess().getSmallestEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getEqualityAccess().getSmallestEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='is the highest' 
	{
        $current = grammarAccess.getEqualityAccess().getHighestEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getEqualityAccess().getHighestEnumLiteralDeclaration_7()); 
    }
));



// Rule NeighbourhooEnum
ruleNeighbourhooEnum returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='neighbor cell where' 
	{
        $current = grammarAccess.getNeighbourhooEnumAccess().getNeighcellEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getNeighbourhooEnumAccess().getNeighcellEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='current cell where' 
	{
        $current = grammarAccess.getNeighbourhooEnumAccess().getCurrentcellEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getNeighbourhooEnumAccess().getCurrentcellEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='search neighborhood where' 
	{
        $current = grammarAccess.getNeighbourhooEnumAccess().getSearchEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getNeighbourhooEnumAccess().getSearchEnumLiteralDeclaration_2()); 
    }
));



// Rule TypeofNeighbourhood
ruleTypeofNeighbourhood returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Von Nuenman' 
	{
        $current = grammarAccess.getTypeofNeighbourhoodAccess().getVonneumanEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getTypeofNeighbourhoodAccess().getVonneumanEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Moore' 
	{
        $current = grammarAccess.getTypeofNeighbourhoodAccess().getMooreEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getTypeofNeighbourhoodAccess().getMooreEnumLiteralDeclaration_1()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


